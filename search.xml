<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Vue2顶部固定且高度可变，如何让页面内容自适应高度</title>
    <url>/2023/07/10/vue2-fix-header/</url>
    <content><![CDATA[<!-- # Vue顶部固定且高度可变，如何让页面内容自适应高度 -->
<h2 id="需求描述"><a href="#需求描述" class="headerlink" title="需求描述"></a>需求描述</h2><p><strong>Vue2</strong><br>页面顶部有个页头，正常情况下只显示页面标题，需要筛选item时可以展开筛选框。<br>无论展开还是折叠，整个页头都是固定在顶部的。  </p>
<span id="more"></span>

<p><img src="/2023/07/10/vue2-fix-header/img_1.jpeg" alt="page-img1" title="正常情况下的页面"><br><img src="/2023/07/10/vue2-fix-header/img_2.jpeg" alt="page-img2" title="展开筛选框情况下的页面"></p>
<h2 id="自定义组件PageContainer"><a href="#自定义组件PageContainer" class="headerlink" title="自定义组件PageContainer"></a>自定义组件PageContainer</h2><h3 id="header和content的插槽"><a href="#header和content的插槽" class="headerlink" title="header和content的插槽"></a>header和content的插槽</h3><p>实现Vue2自定义组件PageContainer，template中写了header和content的插槽。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    // headerRef，在js/ts代码中获取该dom的高度</span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">ref</span>=<span class="string">&quot;headerRef&quot;</span> <span class="attr">class</span>=<span class="string">&quot;page-header&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">slot</span> <span class="attr">name</span>=<span class="string">&quot;header&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;headerSlot&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">slot</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    // 根据headerRef的高度修改state.contentHeight</span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;page-content&quot;</span> <span class="attr">:style</span>=<span class="string">&quot;&#123;height: state.contentHeight&#125;&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">slot</span> <span class="attr">name</span>=<span class="string">&quot;content&quot;</span>&gt;</span> <span class="tag">&lt;/<span class="name">slot</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">lang</span>=<span class="string">&quot;scss&quot;</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="keyword">@import</span> <span class="string">&#x27;@/style/header-search.scss&#x27;</span>;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="selector-class">.page-header</span> &#123;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">border-bottom</span>: <span class="number">1px</span> solid <span class="number">#e8eef2</span>;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">background</span>: <span class="number">#fff</span>;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">width</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"><span class="selector-class">.page-content</span> &#123;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">padding</span>: <span class="number">16px</span>;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">overflow-y</span>: auto;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="使用MutationObserver监听高度"><a href="#使用MutationObserver监听高度" class="headerlink" title="使用MutationObserver监听高度"></a>使用MutationObserver监听高度</h3><p><code>MutationObserver</code> 接口提供了监视对 DOM 树所做更改的能力。  </p>
<blockquote>
<p><a href="https://developer.mozilla.org/zh-CN/docs/Web/API/MutationObserver">https://developer.mozilla.org/zh-CN/docs/Web/API/MutationObserver</a></p>
</blockquote>
<p>使用<code>MutationObserver</code>监听header的高度：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">lang</span>=<span class="string">&quot;ts&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">import</span> &#123;<span class="title class_">Component</span>, <span class="title class_">Vue</span>&#125; <span class="keyword">from</span> <span class="string">&#x27;vue-property-decorator&#x27;</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="comment">// observer 监听配置</span></span></span><br><span class="line"><span class="language-javascript"><span class="comment">// https://developer.mozilla.org/zh-CN/docs/Web/API/MutationObserver/observe</span></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">const</span> config = &#123;</span></span><br><span class="line"><span class="language-javascript">  <span class="attr">attributes</span>: <span class="literal">true</span>,</span></span><br><span class="line"><span class="language-javascript">  <span class="attr">childList</span>: <span class="literal">true</span>,</span></span><br><span class="line"><span class="language-javascript">  <span class="attr">subtree</span>: <span class="literal">true</span></span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">class</span> <span class="title class_">MutationObserver</span> <span class="keyword">extends</span> <span class="title class_ inherited__">window.MutationObserver</span> &#123;&#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">@<span class="title class_">Component</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">  <span class="attr">name</span>: <span class="string">&#x27;page-container&#x27;</span></span></span><br><span class="line"><span class="language-javascript">&#125;)</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">export</span> <span class="keyword">default</span> <span class="keyword">class</span> <span class="title class_">PageContainer</span> <span class="keyword">extends</span> <span class="title class_ inherited__">Vue</span> &#123;</span></span><br><span class="line"><span class="language-javascript">  private state = &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 初始默认高度</span></span></span><br><span class="line"><span class="language-javascript">    <span class="attr">contentHeight</span>: <span class="string">&#x27;calc(100vh - 78px)&#x27;</span></span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript">  private <span class="attr">observer</span>: <span class="title class_">MutationObserver</span> = <span class="keyword">new</span> <span class="title class_">MutationObserver</span>(<span class="function">() =&gt;</span> &#123;&#125;)</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="title function_">mounted</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 获取header高度</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> header = <span class="variable language_">this</span>.<span class="property">$refs</span>.<span class="property">headerRef</span> <span class="keyword">as</span> <span class="title class_">HTMLDivElement</span></span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">this</span>.<span class="property">state</span>.<span class="property">contentHeight</span> = <span class="string">`calc(100vh - <span class="subst">$&#123;header.clientHeight&#125;</span>px)`</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 获取header中‘折叠/展开’的按钮（当点击该按钮时，header高度改变，此时需要改变content高度）</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> element = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;filter-button&#x27;</span>) <span class="keyword">as</span> <span class="title class_">HTMLDivElement</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">if</span> (!element) <span class="keyword">return</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">this</span>.<span class="property">observer</span> = <span class="keyword">new</span> <span class="title class_">MutationObserver</span>(<span class="function">(<span class="params">mutationsList, observer</span>) =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">const</span> header = <span class="variable language_">this</span>.<span class="property">$refs</span>.<span class="property">headerRef</span> <span class="keyword">as</span> <span class="title class_">HTMLDivElement</span></span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">let</span> headerHeight = header.<span class="property">clientHeight</span></span></span><br><span class="line"><span class="language-javascript">      <span class="variable language_">this</span>.<span class="property">state</span>.<span class="property">contentHeight</span> = <span class="string">`calc(100vh - <span class="subst">$&#123;headerHeight&#125;</span>px)`</span></span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 这个‘折叠/展开’按钮（element）样式改变时，会调用observer更新页面内容的高度</span></span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">this</span>.<span class="property">observer</span>.<span class="title function_">observe</span>(element, config)</span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript">  <span class="title class_">Destoryed</span>() &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">this</span>.<span class="property">observer</span>.<span class="title function_">disconnect</span>()</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">this</span>.<span class="property">observer</span>.<span class="title function_">takeRecords</span>()</span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h2 id="页面中应用组件"><a href="#页面中应用组件" class="headerlink" title="页面中应用组件"></a>页面中应用组件</h2><p>在页面中引入自定义组件PageContainer：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">PageContainer</span>&gt;</span></span><br><span class="line">    // slot 插入header内容</span><br><span class="line">    <span class="tag">&lt;<span class="name">template</span> <span class="attr">slot</span>=<span class="string">&quot;header&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;header&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;header-left&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">h1</span> <span class="attr">class</span>=<span class="string">&quot;header-title&quot;</span>&gt;</span>页面header<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">&quot;filter-button&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;onChangeSearchVisible&quot;</span>&gt;</span></span><br><span class="line">              筛选</span><br><span class="line">              <span class="tag">&lt;<span class="name">i</span> <span class="attr">:class</span>=<span class="string">&quot;state.formVisible == true ? `el-icon-caret-bottom` : `icon-arrow`&quot;</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">v-if</span>=<span class="string">&quot;state.formVisible&quot;</span> <span class="attr">class</span>=<span class="string">&quot;header-search&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-form</span> <span class="attr">ref</span>=<span class="string">&quot;formRef&quot;</span> <span class="attr">label-width</span>=<span class="string">&quot;100px&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;search-row&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">el-form-item</span> <span class="attr">label</span>=<span class="string">&quot;ID&quot;</span> <span class="attr">prop</span>=<span class="string">&quot;id&quot;</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">el-input</span> @<span class="attr">change</span>=<span class="string">&quot;onSubmitSearch&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;请输入&quot;</span> <span class="attr">clearable</span> <span class="attr">size</span>=<span class="string">&quot;mini&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">el-input</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">el-form-item</span> <span class="attr">label</span>=<span class="string">&quot;姓名&quot;</span> <span class="attr">prop</span>=<span class="string">&quot;name&quot;</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">el-input</span> @<span class="attr">change</span>=<span class="string">&quot;onSubmitSearch&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;请输入&quot;</span> <span class="attr">clearable</span> <span class="attr">size</span>=<span class="string">&quot;mini&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">el-input</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">el-form-item</span> <span class="attr">label</span>=<span class="string">&quot;学校&quot;</span> <span class="attr">prop</span>=<span class="string">&quot;school&quot;</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">el-input</span> @<span class="attr">change</span>=<span class="string">&quot;onSubmitSearch&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;请输入&quot;</span> <span class="attr">clearable</span> <span class="attr">size</span>=<span class="string">&quot;mini&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">el-input</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">el-form-item</span> <span class="attr">label</span>=<span class="string">&quot;学院&quot;</span> <span class="attr">prop</span>=<span class="string">&quot;department&quot;</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">el-input</span> @<span class="attr">change</span>=<span class="string">&quot;onSubmitSearch&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;请输入&quot;</span> <span class="attr">clearable</span> <span class="attr">size</span>=<span class="string">&quot;mini&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">el-input</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">el-form-item</span> <span class="attr">label</span>=<span class="string">&quot;专业&quot;</span> <span class="attr">prop</span>=<span class="string">&quot;major&quot;</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">el-input</span> @<span class="attr">change</span>=<span class="string">&quot;onSubmitSearch&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;请输入&quot;</span> <span class="attr">clearable</span> <span class="attr">size</span>=<span class="string">&quot;mini&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">el-input</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">el-form-item</span> <span class="attr">label</span>=<span class="string">&quot;导师&quot;</span> <span class="attr">prop</span>=<span class="string">&quot;teacher&quot;</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="name">el-input</span> @<span class="attr">change</span>=<span class="string">&quot;onSubmitSearch&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;请输入&quot;</span> <span class="attr">clearable</span> <span class="attr">size</span>=<span class="string">&quot;mini&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">el-input</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">el-form</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    // slot content 页面内容</span><br><span class="line">    <span class="tag">&lt;<span class="name">template</span> <span class="attr">slot</span>=<span class="string">&quot;content&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">v-for</span>=<span class="string">&quot;(item, index) in [0, 1, 2, 3, 4, 5, 6, 7, 8]&quot;</span> <span class="attr">:key</span>=<span class="string">&quot;index&quot;</span> <span class="attr">style</span>=<span class="string">&quot;background-color: green; height: 150px; margin: 20px&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;font-size: 70px&quot;</span>&gt;</span>&#123;&#123; index &#125;&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">PageContainer</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">lang</span>=<span class="string">&quot;ts&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">import</span> &#123;<span class="title class_">Component</span>, <span class="title class_">Vue</span>, <span class="title class_">Prop</span>&#125; <span class="keyword">from</span> <span class="string">&#x27;vue-property-decorator&#x27;</span></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">import</span> &#123;<span class="title class_">PageContainer</span>&#125; <span class="keyword">from</span> <span class="string">&#x27;@/components&#x27;</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">@<span class="title class_">Component</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">  <span class="attr">name</span>: <span class="string">&#x27;fix-header&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">  <span class="attr">components</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="title class_">PageContainer</span></span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript">&#125;)</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">export</span> <span class="keyword">default</span> <span class="keyword">class</span> <span class="title class_">BatteryRequirement</span> <span class="keyword">extends</span> <span class="title class_ inherited__">Vue</span> &#123;</span></span><br><span class="line"><span class="language-javascript">  private state = &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// header搜索筛选框的可见性</span></span></span><br><span class="line"><span class="language-javascript">    <span class="attr">formVisible</span>: <span class="literal">false</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 筛选表格</span></span></span><br><span class="line"><span class="language-javascript">    <span class="attr">form</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">id</span>: <span class="string">&#x27;&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">name</span>: <span class="string">&#x27;&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">school</span>: <span class="string">&#x27;&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">department</span>: <span class="string">&#x27;&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">teacher</span>: <span class="string">&#x27;&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">major</span>: <span class="string">&#x27;&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 展开或折叠筛选弹窗</span></span></span><br><span class="line"><span class="language-javascript">  private <span class="title function_">onChangeSearchVisible</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">this</span>.<span class="property">state</span>.<span class="property">formVisible</span> = !<span class="variable language_">this</span>.<span class="property">state</span>.<span class="property">formVisible</span></span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  private <span class="title function_">onClearForm</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">this</span>.<span class="property">state</span>.<span class="property">form</span> = &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">type</span>: <span class="string">&#x27;&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">user</span>: <span class="string">&#x27;&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">id</span>: <span class="string">&#x27;&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">current_dept</span>: <span class="string">&#x27;&#x27;</span></span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript">  private <span class="title function_">onSubmitSearch</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;search筛选&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h2 id="最终效果图"><a href="#最终效果图" class="headerlink" title="最终效果图"></a>最终效果图</h2><p><img src="/2023/07/10/vue2-fix-header/071002.gif" alt="page-gif" title="顶部高度可折叠展开，页面内容自适应高度"></p>
]]></content>
      <categories>
        <category>前端</category>
        <category>Vue</category>
      </categories>
      <tags>
        <tag>Vue</tag>
        <tag>Vue2</tag>
        <tag>MutationObserver</tag>
        <tag>javascript</tag>
        <tag>typescript</tag>
      </tags>
  </entry>
  <entry>
    <title>Mpx框架搭建一个飞书小程序</title>
    <url>/2023/07/11/applet-mpx/</url>
    <content><![CDATA[<!-- # Mpx框架搭建一个飞书小程序 -->
<h2 id="Mpx-cli初始化项目"><a href="#Mpx-cli初始化项目" class="headerlink" title="Mpx-cli初始化项目"></a>Mpx-cli初始化项目</h2><h3 id="安装Mpx脚手架"><a href="#安装Mpx脚手架" class="headerlink" title="安装Mpx脚手架"></a>安装Mpx脚手架</h3><blockquote>
<p>Mpx官网：<a href="https://mpxjs.cn/guide/basic/start.html">https://mpxjs.cn/guide/basic/start.html</a>  </p>
</blockquote>
<p>全局安装:</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm i -g @mpxjs/cli</span><br><span class="line">mpx create mpx-project-name</span><br></pre></td></tr></table></figure>
<p>也可以在不全局安装脚手架情况下创建项目:  </p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npx @mpxjs/cli create mpx-project-name</span><br></pre></td></tr></table></figure>
<p>执行命令后会弹出一系列问题进行项目初始配置，根据自身需求进行选择，完成后进入项目目录进行依赖安装。  </p>
<p>安装成功后进入目录并执行：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cd mpx-project-name</span><br><span class="line">npm install</span><br></pre></td></tr></table></figure>
<h3 id="编译构建"><a href="#编译构建" class="headerlink" title="编译构建"></a>编译构建</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm run serve</span><br></pre></td></tr></table></figure>

<h2 id="导入飞书小程序配置"><a href="#导入飞书小程序配置" class="headerlink" title="导入飞书小程序配置"></a>导入飞书小程序配置</h2><h3 id="project-config-json"><a href="#project-config-json" class="headerlink" title="project.config.json"></a>project.config.json</h3><p>在<code>static</code>文件夹下新建一个文件夹，命名为<code>tt</code><br>在<code>tt</code>文件夹新建一个文件<code>project.config.json</code><br><img src="/2023/07/11/applet-mpx/tt_json.jpeg" alt="page-img1" title="新建文件project.config.json"></p>
<p>文件写入，<code>appid</code>和<code>projectname</code>根据自己的项目修改，<code>appid</code>为申请的飞书小程序的appid。 </p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;setting&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;urlCheck&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;es6&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;postcss&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;minified&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;newFeature&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;babelSetting&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;ignore&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;disablePlugins&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;outputPath&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;condition&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;appid&quot;</span><span class="punctuation">:</span> <span class="string">&quot;cli_a111110000011111&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;projectname&quot;</span><span class="punctuation">:</span> <span class="string">&quot;applet-name&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;compileType&quot;</span><span class="punctuation">:</span> <span class="string">&quot;miniprogram&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;libVersion&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2.32.2&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;packOptions&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;ignore&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;include&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;condition&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span><span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;editorSetting&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;tabIndent&quot;</span><span class="punctuation">:</span> <span class="string">&quot;insertSpaces&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;tabSize&quot;</span><span class="punctuation">:</span> <span class="number">2</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>
<h3 id="vue-config-js"><a href="#vue-config-js" class="headerlink" title="vue.config.js"></a>vue.config.js</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> &#123; defineConfig &#125; = <span class="built_in">require</span>(<span class="string">&quot;@vue/cli-service&quot;</span>);</span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = <span class="title function_">defineConfig</span>(&#123;</span><br><span class="line">  <span class="attr">pluginOptions</span>: &#123;</span><br><span class="line">    <span class="attr">mpx</span>: &#123;</span><br><span class="line">      <span class="comment">// 这里不要改为&#x27;tt&#x27;</span></span><br><span class="line">      <span class="comment">// 去改package.json的 serve/build 命令</span></span><br><span class="line">      <span class="comment">// 为了方便后续引入vant weapp组件库</span></span><br><span class="line">      <span class="attr">srcMode</span>: <span class="string">&quot;wx&quot;</span>,</span><br><span class="line">      <span class="attr">plugin</span>: &#123;</span><br><span class="line">        <span class="attr">hackResolveBuildDependencies</span>: <span class="function">(<span class="params">&#123; files, resolveDependencies &#125;</span>) =&gt;</span> &#123;</span><br><span class="line">          <span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">&quot;path&quot;</span>);</span><br><span class="line">          <span class="keyword">const</span> packageJSONPath = path.<span class="title function_">resolve</span>(<span class="string">&quot;package.json&quot;</span>);</span><br><span class="line">          <span class="keyword">if</span> (files.<span class="title function_">has</span>(packageJSONPath)) files.<span class="title function_">delete</span>(packageJSONPath);</span><br><span class="line">          <span class="keyword">if</span> (resolveDependencies.<span class="property">files</span>.<span class="title function_">has</span>(packageJSONPath)) &#123;</span><br><span class="line">            resolveDependencies.<span class="property">files</span>.<span class="title function_">delete</span>(packageJSONPath);</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="attr">loader</span>: &#123;&#125;,</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 如果希望node_modules下的文件时对应的缓存可以失效，</span></span><br><span class="line"><span class="comment">   * 可以将configureWebpack.snap.managedPaths修改为 []</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="title function_">configureWebpack</span>(<span class="params">config</span>) &#123;&#125;,</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<h3 id="package-json"><a href="#package-json" class="headerlink" title="package.json"></a>package.json</h3><p>文件<code>package.json</code>中，在<code>serve</code>和<code>build</code>的结尾都加上<code> --tt</code><br><img src="/2023/07/11/applet-mpx/serve-tt.jpeg" alt="page-img1" title="结尾都加上` --tt`">  </p>
<p><strong>package.json</strong></p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;mpx-project&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;version&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0.1.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;private&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;scripts&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;serve&quot;</span><span class="punctuation">:</span> <span class="string">&quot;mpx-cli-service serve --tt&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;build&quot;</span><span class="punctuation">:</span> <span class="string">&quot;mpx-cli-service build --tt&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;lint&quot;</span><span class="punctuation">:</span> <span class="string">&quot;eslint --ext .js,.ts,.mpx src/&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;dependencies&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;@mpxjs/api-proxy&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^2.8.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;@mpxjs/core&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^2.8.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;@mpxjs/fetch&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^2.8.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;@mpxjs/pinia&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^2.8.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;@mpxjs/store&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^2.8.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;@mpxjs/utils&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^2.8.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;@vant/weapp&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^1.10.19&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;pinia&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^2.0.14&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;vue&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^2.6.14&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;vue-demi&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^0.13.11&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;vue-i18n&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^8.27.2&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;vue-i18n-bridge&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^9.2.2&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;vue-router&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^3.1.3&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;devDependencies&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;@babel/core&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^7.10.4&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;@babel/plugin-transform-runtime&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^7.10.4&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;@babel/preset-env&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^7.10.4&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;@babel/runtime-corejs3&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^7.10.4&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;@mpxjs/babel-plugin-inject-page-events&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^2.8.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;@mpxjs/eslint-config-ts&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^1.0.5&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;@mpxjs/mpx-cli-service&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^2.0.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;@mpxjs/size-report&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^2.8.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;@mpxjs/vue-cli-plugin-mpx&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^2.0.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;@mpxjs/vue-cli-plugin-mpx-eslint&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^2.0.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;@mpxjs/vue-cli-plugin-mpx-typescript&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^2.0.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;@mpxjs/webpack-plugin&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^2.8.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;@vue/cli-service&quot;</span><span class="punctuation">:</span> <span class="string">&quot;~5.0.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;autoprefixer&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^10.2.4&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;eslint&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^7.0.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;postcss&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^8.2.6&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;sass&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^1.63.6&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;sass-loader&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^13.3.2&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;stylus&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^0.55.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;stylus-loader&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^6.1.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;typescript&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^4.1.3&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;vue-template-compiler&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^2.6.14&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;webpack&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^5.43.0&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;browserslist&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="string">&quot;ios &gt;= 8&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="string">&quot;chrome &gt;= 47&quot;</span></span><br><span class="line">  <span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>
<p>运行输入</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm run serve</span><br></pre></td></tr></table></figure>
<p>成功后出现<code>dist</code>文件夹，在飞书开发者工具中打开<code>dist/tt</code>。<br><img src="/2023/07/11/applet-mpx/dist_tt.jpeg" alt="page-img2" title="打包好的tt小程序文件包"></p>
<p>打开飞书开发者工具，选择<code>Gadget</code>-&gt;选择<code>Import project</code>-&gt;选择该项目打包好的tt文件夹-&gt;确认打开文件夹。  </p>
<p><img src="/2023/07/11/applet-mpx/open_dist.jpeg" alt="page-img3" title="在飞书开发者工具中导入项目/dist/tt"></p>
<p>成功打开<br><img src="/2023/07/11/applet-mpx/open_ok.jpeg" alt="page-img4" title="成功打开"></p>
<p>回到Vscode中继续开发项目，小程序会自动更新代码变动。</p>
<h2 id="开发一个新页面"><a href="#开发一个新页面" class="headerlink" title="开发一个新页面"></a>开发一个新页面</h2><h3 id="页面index-mpx"><a href="#页面index-mpx" class="headerlink" title="页面index.mpx"></a>页面index.mpx</h3><p>开发一个新页面<code>/pages/home/index</code><br>在<code>pages/</code>新建文件夹命名为<code>home</code>，在<code>home</code>下新建文件<code>index.mpx</code>。  </p>
<p><strong>src&#x2F;pages&#x2F;home&#x2F;index.mpx</strong> </p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;home-page&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;home-button&quot;</span> <span class="attr">bindtap</span>=<span class="string">&quot;goTo&quot;</span>&gt;</span>点击跳转<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">import</span> mpx, &#123; createPage &#125; <span class="keyword">from</span> <span class="string">&#x27;@mpxjs/core&#x27;</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="title function_">createPage</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">onLoad</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="comment">//</span></span></span><br><span class="line"><span class="language-javascript">    &#125;,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">methods</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="title function_">goTo</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;goTo&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">        mpx.<span class="title function_">switchTab</span>(&#123; <span class="attr">url</span>: <span class="string">&#x27;/pages/device/index&#x27;</span> &#125;)</span></span><br><span class="line"><span class="language-javascript">      &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">  &#125;)</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;application/json&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="string">&quot;usingComponents&quot;</span>: &#123;&#125;</span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">lang</span>=<span class="string">&quot;scss&quot;</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">  <span class="selector-class">.home-page</span> &#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">text-align</span>: center;</span></span><br><span class="line"><span class="language-css">  &#125;</span></span><br><span class="line"><span class="language-css">  <span class="selector-class">.home-button</span> &#123;</span></span><br><span class="line"><span class="language-css">    // <span class="attr">--color-primary</span> 为 app<span class="selector-class">.mpx</span> 中的全局样式</span></span><br><span class="line"><span class="language-css">    <span class="attribute">border</span>: <span class="number">0.1rem</span> solid <span class="built_in">var</span>(--color-primary);</span></span><br><span class="line"><span class="language-css">    <span class="attribute">margin</span>: <span class="number">20%</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">padding</span>: <span class="number">1.2rem</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">border-radius</span>: <span class="number">1rem</span>;</span></span><br><span class="line"><span class="language-css">  &#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="app-mpx-配置路由"><a href="#app-mpx-配置路由" class="headerlink" title="app.mpx 配置路由"></a>app.mpx 配置路由</h3><p>在<code>app.mpx</code>给这个新页面配置路由。<br><code>app.mpx</code>中，还可以配置底部tabbar、全局样式等。  </p>
<p><strong>app.mpx</strong>  </p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">import</span> mpx, &#123; createApp &#125; <span class="keyword">from</span> <span class="string">&#x27;@mpxjs/core&#x27;</span></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">import</span> apiProxy <span class="keyword">from</span> <span class="string">&#x27;@mpxjs/api-proxy&#x27;</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  mpx.<span class="title function_">use</span>(apiProxy, &#123; <span class="attr">usePromise</span>: <span class="literal">true</span> &#125;)</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="title function_">createApp</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">onLaunch</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="comment">//</span></span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">  &#125;)</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">lang</span>=<span class="string">&quot;css&quot;</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">  <span class="comment">/*此处编写全局样式*/</span></span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">  <span class="selector-pseudo">:root</span> &#123;</span></span><br><span class="line"><span class="language-css">    <span class="attr">--color-primary</span>: <span class="number">#d6d6d6</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attr">--color-blue</span>: <span class="number">#2d72ff</span>;</span></span><br><span class="line"><span class="language-css">  &#125;</span></span><br><span class="line"><span class="language-css">  <span class="selector-class">.page-bottom</span> &#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">margin</span>: <span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">text-align</span>: center;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">position</span>: absolute;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">bottom</span>: <span class="number">10px</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">width</span>: <span class="built_in">calc</span>(<span class="number">100%</span> - <span class="number">40px</span>);</span></span><br><span class="line"><span class="language-css">  &#125;</span></span><br><span class="line"><span class="language-css">  <span class="selector-class">.flex-space-between</span> &#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">display</span>: flex;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">justify-content</span>: space-between;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">width</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="language-css">  &#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;application/json&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="string">&quot;pages&quot;</span>: [</span></span><br><span class="line"><span class="language-javascript">      <span class="string">&quot;./pages/home/index&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">      <span class="string">&quot;./pages/device/index&quot;</span></span></span><br><span class="line"><span class="language-javascript">    ],</span></span><br><span class="line"><span class="language-javascript">    <span class="string">&quot;tabBar&quot;</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="string">&quot;list&quot;</span>: [</span></span><br><span class="line"><span class="language-javascript">        &#123;</span></span><br><span class="line"><span class="language-javascript">          <span class="string">&quot;pagePath&quot;</span>: <span class="string">&quot;pages/home/index&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">          <span class="string">&quot;text&quot;</span>: <span class="string">&quot;首页&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">          <span class="string">&quot;iconPath&quot;</span>: <span class="string">&quot;assets/tab.png&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">          <span class="string">&quot;selectedIconPath&quot;</span>: <span class="string">&quot;assets/tab-selected.png&quot;</span></span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">      ]</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>前端</category>
        <category>Mpx</category>
      </categories>
      <tags>
        <tag>javascript</tag>
        <tag>typescript</tag>
        <tag>Mpx</tag>
        <tag>小程序</tag>
        <tag>飞书小程序</tag>
      </tags>
  </entry>
  <entry>
    <title>Mpx框架开发飞书小程序，引入VantWeapp组件库</title>
    <url>/2023/07/11/applet-mpx-vant/</url>
    <content><![CDATA[<!-- # Mpx框架开发飞书小程序，引入VantWeapp组件库 -->
<blockquote>
<p>Mpx框架搭建一个飞书小程序: <a href="https://hengqu4.github.io/2023/07/11/applet-mpx/">https://hengqu4.github.io/2023/07/11/applet-mpx/</a></p>
</blockquote>
<h2 id="下载Vant-Weapp组件库"><a href="#下载Vant-Weapp组件库" class="headerlink" title="下载Vant Weapp组件库"></a>下载Vant Weapp组件库</h2><blockquote>
<p>组件库官网：<a href="https://youzan.github.io/vant-weapp/#/quickstart">https://youzan.github.io/vant-weapp/#/quickstart</a></p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">通过 npm 安装</span></span><br><span class="line">npm i @vant/weapp -S --production</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">通过 yarn 安装</span></span><br><span class="line">yarn add @vant/weapp --production</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">安装 0.x 版本</span></span><br><span class="line">npm i vant-weapp -S --production</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h2 id="页面中引用vant组件"><a href="#页面中引用vant组件" class="headerlink" title="页面中引用vant组件"></a>页面中引用vant组件</h2><p>在<code>index.mpx</code>中引入要用的组件</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;application/json&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="string">&quot;usingComponents&quot;</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="string">&quot;van-popup&quot;</span>: <span class="string">&quot;@vant/weapp/popup/index&quot;</span></span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p><img src="/2023/07/11/applet-mpx-vant/page-vant.jpeg" alt="page-img3" title="举例，引入van-popup组件"></p>
<p>打包运行</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm run serve</span><br></pre></td></tr></table></figure>
<h2 id="处理没有index-ttml的报错"><a href="#处理没有index-ttml的报错" class="headerlink" title="处理没有index.ttml的报错"></a>处理没有index.ttml的报错</h2><p>出现如下报错：  </p>
<blockquote>
<p>[BIZPACK] [ERROR] [SOURCECODE]<br>&#x2F;Users&#x2F;xiaoyu.jia&#x2F;Desktop&#x2F;mpx-project&#x2F;dist&#x2F;tt&#x2F;components&#x2F;vant&#x2F;weapp467c2ec1&#x2F;popup&#x2F;index.ttml is not found which referenced by &#x2F;Users&#x2F;xiaoyu.jia&#x2F;Desktop&#x2F;mpx-project&#x2F;dist&#x2F;tt&#x2F;pages&#x2F;device&#x2F;index.json<br>[BIZPACK] [ERROR] [SOURCECODE]&#x2F;Users&#x2F;xiaoyu.jia&#x2F;Desktop&#x2F;mpx-project&#x2F;dist&#x2F;tt&#x2F;components&#x2F;vant&#x2F;weapp467c2ec1&#x2F;popup&#x2F;index.wxml is not found which referenced by&#x2F;Users&#x2F;xiaoyu.jia&#x2F;Desktop&#x2F;mpx-project&#x2F;dist&#x2F;tt&#x2F;pages&#x2F;device&#x2F;index.json</p>
</blockquote>
<p><img src="/2023/07/11/applet-mpx-vant/error.jpeg" alt="page-img0" title="打包的component/vant/../组件文件夹下没有ttml和ttss"></p>
<p><strong>fix:修改运行命令</strong>  </p>
<p>文件<code>package.json</code>中，在<code>serve</code>和<code>build</code>的结尾都加上<code> --tt</code>。<br><img src="/2023/07/11/applet-mpx-vant/serve-tt.jpeg" alt="page-img1" title="结尾都加上` --tt`"></p>
<p><code>vue.config.js</code>的<strong>srcMode</strong>改为<strong>wx</strong></p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> &#123; defineConfig &#125; = <span class="built_in">require</span>(<span class="string">&quot;@vue/cli-service&quot;</span>);</span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = <span class="title function_">defineConfig</span>(&#123;</span><br><span class="line">  <span class="attr">pluginOptions</span>: &#123;</span><br><span class="line">    <span class="attr">mpx</span>: &#123;</span><br><span class="line">      <span class="comment">// 这里不要改为&#x27;tt&#x27;</span></span><br><span class="line">      <span class="comment">// 去改package.json的 serve/build 命令（上一步）</span></span><br><span class="line">      <span class="attr">srcMode</span>: <span class="string">&quot;wx&quot;</span>,</span><br><span class="line">      <span class="attr">plugin</span>: &#123;</span><br><span class="line">        <span class="attr">hackResolveBuildDependencies</span>: <span class="function">(<span class="params">&#123; files, resolveDependencies &#125;</span>) =&gt;</span> &#123;</span><br><span class="line">          <span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">&quot;path&quot;</span>);</span><br><span class="line">          <span class="keyword">const</span> packageJSONPath = path.<span class="title function_">resolve</span>(<span class="string">&quot;package.json&quot;</span>);</span><br><span class="line">          <span class="keyword">if</span> (files.<span class="title function_">has</span>(packageJSONPath)) files.<span class="title function_">delete</span>(packageJSONPath);</span><br><span class="line">          <span class="keyword">if</span> (resolveDependencies.<span class="property">files</span>.<span class="title function_">has</span>(packageJSONPath)) &#123;</span><br><span class="line">            resolveDependencies.<span class="property">files</span>.<span class="title function_">delete</span>(packageJSONPath);</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="attr">loader</span>: &#123;&#125;,</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 如果希望node_modules下的文件时对应的缓存可以失效，</span></span><br><span class="line"><span class="comment">   * 可以将configureWebpack.snap.managedPaths修改为 []</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="title function_">configureWebpack</span>(<span class="params">config</span>) &#123;&#125;,</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<p>删除<code>dist</code>文件夹，再重新在终端里输入<code>npm run serve</code>，启动项目。<br>新打包好的<code>dist</code>中，<code>vant/../</code>出现了<code>ttml</code>,<code>ttss</code>等文件。<br><img src="/2023/07/11/applet-mpx-vant/success.jpeg" alt="page-img4" title="打包的component/vant/../组件文件夹下出现了ttml和ttss"></p>
<h2 id="配置文件参考"><a href="#配置文件参考" class="headerlink" title="配置文件参考"></a>配置文件参考</h2><h3 id="tsconfig-json"><a href="#tsconfig-json" class="headerlink" title="tsconfig.json"></a>tsconfig.json</h3><figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;compilerOptions&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;target&quot;</span><span class="punctuation">:</span> <span class="string">&quot;esnext&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;module&quot;</span><span class="punctuation">:</span> <span class="string">&quot;esnext&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;noImplicitThis&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;strictNullChecks&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;moduleResolution&quot;</span><span class="punctuation">:</span> <span class="string">&quot;node&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;skipLibCheck&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;outDir&quot;</span><span class="punctuation">:</span> <span class="string">&quot;lib&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;baseUrl&quot;</span><span class="punctuation">:</span> <span class="string">&quot;.&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;rootDir&quot;</span><span class="punctuation">:</span> <span class="string">&quot;src&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;rootDirs&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">      <span class="string">&quot;src&quot;</span></span><br><span class="line">    <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;lib&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">      <span class="string">&quot;esnext&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="string">&quot;dom&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="string">&quot;dom.iterable&quot;</span></span><br><span class="line">    <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;paths&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;@/*&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="string">&quot;src/*&quot;</span></span><br><span class="line">      <span class="punctuation">]</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;types&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="punctuation">]</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;exclude&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="string">&quot;build&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="string">&quot;dist&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="string">&quot;config&quot;</span></span><br><span class="line">  <span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>
<h3 id="jsconfig-json"><a href="#jsconfig-json" class="headerlink" title="jsconfig.json"></a>jsconfig.json</h3><figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;compilerOptions&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;target&quot;</span><span class="punctuation">:</span> <span class="string">&quot;es5&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;module&quot;</span><span class="punctuation">:</span> <span class="string">&quot;esnext&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;baseUrl&quot;</span><span class="punctuation">:</span> <span class="string">&quot;./&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;moduleResolution&quot;</span><span class="punctuation">:</span> <span class="string">&quot;node&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;paths&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;@/*&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="string">&quot;src/*&quot;</span></span><br><span class="line">      <span class="punctuation">]</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;lib&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">      <span class="string">&quot;esnext&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="string">&quot;dom&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="string">&quot;dom.iterable&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="string">&quot;scripthost&quot;</span></span><br><span class="line">    <span class="punctuation">]</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>前端</category>
        <category>Mpx</category>
      </categories>
      <tags>
        <tag>javascript</tag>
        <tag>Mpx</tag>
        <tag>小程序</tag>
        <tag>飞书小程序</tag>
        <tag>Vant</tag>
        <tag>Vant Weapp</tag>
      </tags>
  </entry>
  <entry>
    <title>【Vue3+Element】实现选择器输入框SelectInput，可以过滤筛选项，可以直接输入搜索</title>
    <url>/2023/07/13/vue3-search-input/</url>
    <content><![CDATA[<!-- # 【Vue3+Element】实现选择器输入框SelectInput，可以过滤筛选项，可以直接输入搜索 -->
<h2 id="问题需求"><a href="#问题需求" class="headerlink" title="问题需求"></a>问题需求</h2><p>目前<strong>ElementPlus</strong>直接可以过滤的选择器，但是输入框内的文本只能是options匹配项目中的一个。<br>有时候用户想要自己直接输入一段文本去搜索，或者在选择一个匹配项后继续输入文本，这时element就不支持了。<br>这里我们实现一个既可以<strong>选择匹配项</strong>又可以<strong>在任何时候输入文本</strong>的输入框。  </p>
<span id="more"></span>

<p><img src="/2023/07/13/vue3-search-input/img1.jpeg" alt="page-img1" title="常见的选择器(可调用Element直接实现)"></p>
<p><img src="/2023/07/13/vue3-search-input/img2.jpeg" alt="page-img2" title="可以搜索过滤的选择器(可调用Element直接实现【为el-select添加filterable属性即可启用搜索功能】)"></p>
<p><img src="/2023/07/13/vue3-search-input/img3.jpeg" alt="page-img3" title="还可以输入不在option中的文本(Element不支持，自己实现【见后文】)"></p>
<blockquote>
<p>Element的选择器(筛选选项): <a href="https://element-plus.org/zh-CN/component/select.html#%E7%AD%9B%E9%80%89%E9%80%89%E9%A1%B9">https://element-plus.org/zh-CN/component/select.html#%E7%AD%9B%E9%80%89%E9%80%89%E9%A1%B9</a>  </p>
</blockquote>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-select</span> <span class="attr">v-model</span>=<span class="string">&quot;value&quot;</span> <span class="attr">filterable</span> <span class="attr">placeholder</span>=<span class="string">&quot;Select&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">el-option</span></span></span><br><span class="line"><span class="tag">      <span class="attr">v-for</span>=<span class="string">&quot;item in options&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">:key</span>=<span class="string">&quot;item.value&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">:label</span>=<span class="string">&quot;item.label&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">:value</span>=<span class="string">&quot;item.value&quot;</span></span></span><br><span class="line"><span class="tag">    /&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">el-select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">lang</span>=<span class="string">&quot;ts&quot;</span> <span class="attr">setup</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">import</span> &#123; ref &#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">const</span> value = <span class="title function_">ref</span>(<span class="string">&#x27;&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">const</span> options = [</span></span><br><span class="line"><span class="language-javascript">  &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">value</span>: <span class="string">&#x27;Option1&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">label</span>: <span class="string">&#x27;Option1&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">  &#125;,</span></span><br><span class="line"><span class="language-javascript">  &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">value</span>: <span class="string">&#x27;Option2&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">label</span>: <span class="string">&#x27;Option2&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">  &#125;,</span></span><br><span class="line"><span class="language-javascript">  &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">value</span>: <span class="string">&#x27;Option3&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">label</span>: <span class="string">&#x27;Option3&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">  &#125;,</span></span><br><span class="line"><span class="language-javascript">  &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">value</span>: <span class="string">&#x27;Option4&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">label</span>: <span class="string">&#x27;Option4&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">  &#125;,</span></span><br><span class="line"><span class="language-javascript">  &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">value</span>: <span class="string">&#x27;Option5&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">label</span>: <span class="string">&#x27;Option5&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">  &#125;,</span></span><br><span class="line"><span class="language-javascript">]</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h2 id="自定义组件SearchInput"><a href="#自定义组件SearchInput" class="headerlink" title="自定义组件SearchInput"></a>自定义组件SearchInput</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-dropdown</span></span></span><br><span class="line"><span class="tag">    <span class="attr">style</span>=<span class="string">&quot;width: 100%&quot;</span></span></span><br><span class="line"><span class="tag">    @<span class="attr">command</span>=<span class="string">&quot;onChangeCommand&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">:teleported</span>=<span class="string">&quot;false&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">placement</span>=<span class="string">&quot;bottom-start&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">trigger</span>=<span class="string">&quot;click&quot;</span></span></span><br><span class="line"><span class="tag">  &gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">el-input</span></span></span><br><span class="line"><span class="tag">      <span class="attr">:model-value</span>=<span class="string">&quot;props.modelValue&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">:placeholder</span>=<span class="string">&quot;props.placeholder&quot;</span></span></span><br><span class="line"><span class="tag">      @<span class="attr">input</span>=<span class="string">&quot;onInput&quot;</span></span></span><br><span class="line"><span class="tag">      @<span class="attr">change</span>=<span class="string">&quot;onInputChange&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">clearable</span></span></span><br><span class="line"><span class="tag">    /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">template</span> #<span class="attr">dropdown</span> <span class="attr">v-if</span>=<span class="string">&quot;options.length &gt; 0&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">el-dropdown-menu</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-dropdown-item</span></span></span><br><span class="line"><span class="tag">          <span class="attr">v-for</span>=<span class="string">&quot;item in options&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">:key</span>=<span class="string">&quot;item.value&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">:command</span>=<span class="string">&quot;item.value&quot;</span></span></span><br><span class="line"><span class="tag">        &gt;</span></span><br><span class="line">          &#123;&#123; item.value &#125;&#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">el-dropdown-item</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">el-dropdown-menu</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">el-dropdown</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">setup</span> <span class="attr">lang</span>=<span class="string">&quot;ts&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">import</span> &#123; ref &#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript"><span class="comment">// 接收父组件的传参</span></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">const</span> props = <span class="title function_">defineProps</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">  <span class="attr">modelValue</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">type</span>: <span class="title class_">String</span>,</span></span><br><span class="line"><span class="language-javascript">  &#125;,</span></span><br><span class="line"><span class="language-javascript">  <span class="attr">options</span>: &#123; <span class="attr">type</span>: <span class="title class_">Array</span> &#125;,</span></span><br><span class="line"><span class="language-javascript">  <span class="attr">placeholder</span>: &#123; <span class="attr">type</span>: <span class="title class_">String</span> &#125;,</span></span><br><span class="line"><span class="language-javascript">&#125;);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="comment">// 触发父组件的方法</span></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">const</span> emit = <span class="title function_">defineEmits</span>([<span class="string">&#x27;change&#x27;</span>, <span class="string">&#x27;update:modelValue&#x27;</span>]);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">const</span> options = <span class="title function_">ref</span>(props.<span class="property">options</span> <span class="keyword">as</span> any);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">const</span> <span class="title function_">filterOptions</span> = (<span class="params">val: string</span>) =&gt; &#123;</span></span><br><span class="line"><span class="language-javascript">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;过滤筛选项&quot;</span>)</span></span><br><span class="line"><span class="language-javascript">  options.<span class="property">value</span> = props.<span class="property">options</span>?.<span class="title function_">filter</span>(<span class="function">(<span class="params">item: any</span>) =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">return</span> item.<span class="property">value</span>?.<span class="title function_">indexOf</span>(val) !== -<span class="number">1</span>;</span></span><br><span class="line"><span class="language-javascript">  &#125;);</span></span><br><span class="line"><span class="language-javascript">&#125;;</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">const</span> <span class="title function_">onChangeCommand</span> = (<span class="params">val: string</span>) =&gt; &#123;</span></span><br><span class="line"><span class="language-javascript">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;点击菜单项触发的事件回调&quot;</span>)</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="title function_">emit</span>(<span class="string">&#x27;update:modelValue&#x27;</span>, val);</span></span><br><span class="line"><span class="language-javascript">  <span class="title function_">emit</span>(<span class="string">&#x27;change&#x27;</span>, val);</span></span><br><span class="line"><span class="language-javascript">  <span class="title function_">filterOptions</span>(val);</span></span><br><span class="line"><span class="language-javascript">&#125;;</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">const</span> <span class="title function_">onInput</span> = (<span class="params">val: string</span>) =&gt; &#123;</span></span><br><span class="line"><span class="language-javascript">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;在 Input 值改变时触发&quot;</span>)</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="title function_">emit</span>(<span class="string">&#x27;update:modelValue&#x27;</span>, val);</span></span><br><span class="line"><span class="language-javascript">  <span class="title function_">filterOptions</span>(val);</span></span><br><span class="line"><span class="language-javascript">&#125;;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">const</span> <span class="title function_">onInputChange</span> = (<span class="params">val: string</span>) =&gt; &#123;</span></span><br><span class="line"><span class="language-javascript">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;仅当 modelValue 改变时，当输入框失去焦点或用户按Enter时触发&quot;</span>)</span></span><br><span class="line"><span class="language-javascript">  <span class="title function_">emit</span>(<span class="string">&#x27;change&#x27;</span>, val);</span></span><br><span class="line"><span class="language-javascript">&#125;;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">lang</span>=<span class="string">&quot;scss&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="页面中应用SearchInput"><a href="#页面中应用SearchInput" class="headerlink" title="页面中应用SearchInput"></a>页面中应用SearchInput</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">el-form</span></span></span><br><span class="line"><span class="tag">      <span class="attr">ref</span>=<span class="string">&quot;searchFormRef&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">:model</span>=<span class="string">&quot;searchForm&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">label-width</span>=<span class="string">&quot;110px&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">label-position</span>=<span class="string">&quot;left&quot;</span></span></span><br><span class="line"><span class="tag">    &gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">el-form-item</span> <span class="attr">:label</span>=<span class="string">&quot;`水果`&quot;</span> <span class="attr">prop</span>=<span class="string">&quot;fruit&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">SearchInput</span></span></span><br><span class="line"><span class="tag">          <span class="attr">v-model</span>=<span class="string">&quot;searchForm.fruit&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">:placeholder</span>=<span class="string">&quot;`请输入水果`&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">:options</span>=<span class="string">&quot;fruitOptions?.[project.version]&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">v-if</span>=<span class="string">&quot;drawerVisible&quot;</span></span></span><br><span class="line"><span class="tag">        /&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span><br><span class="line"></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;button-container&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-button</span> @<span class="attr">click</span>=<span class="string">&quot;submitForm(searchFormRef)&quot;</span>&gt;</span> 确定 <span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">el-form</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">setup</span> <span class="attr">lang</span>=<span class="string">&quot;ts&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">import</span> &#123; ref, toRefs, reactive &#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">import</span> type &#123; <span class="title class_">FormInstance</span>, <span class="title class_">FormRules</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;element-plus&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">const</span> fruitOptions = [</span></span><br><span class="line"><span class="language-javascript">  &#123; <span class="attr">value</span>: <span class="string">&#x27;apple&#x27;</span> &#125;,</span></span><br><span class="line"><span class="language-javascript">  &#123; <span class="attr">value</span>: <span class="string">&#x27;banana&#x27;</span> &#125;,</span></span><br><span class="line"><span class="language-javascript">  &#123; <span class="attr">value</span>: <span class="string">&#x27;orange&#x27;</span> &#125;,</span></span><br><span class="line"><span class="language-javascript">  &#123; <span class="attr">value</span>: <span class="string">&#x27;lemon&#x27;</span> &#125;,</span></span><br><span class="line"><span class="language-javascript">];</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">const</span> searchFormRef = ref&lt;<span class="title class_">FormInstance</span>&gt;();</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">const</span> searchForm = <span class="title function_">reactive</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">  <span class="attr">deviceId</span>: <span class="string">&#x27;&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">  <span class="attr">fruit</span>: <span class="string">&#x27;&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">&#125;);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="comment">// 点击确认按钮</span></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">const</span> <span class="title function_">submitForm</span> = (<span class="params">formEl: FormInstance | <span class="literal">undefined</span></span>) =&gt; &#123;</span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">if</span> (!formEl) <span class="keyword">return</span>;</span></span><br><span class="line"><span class="language-javascript">  formEl.<span class="title function_">validate</span>(<span class="function">(<span class="params">valid</span>) =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">if</span> (valid) &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;按下确认键&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">  &#125;);</span></span><br><span class="line"><span class="language-javascript">&#125;;</span></span><br></pre></td></tr></table></figure>
<p>页面最终效果图<br><img src="/2023/07/13/vue3-search-input/071301.gif" alt="page-gif1" title="可以搜索过滤的筛选器输入框"></p>
]]></content>
      <categories>
        <category>前端</category>
        <category>Vue</category>
      </categories>
      <tags>
        <tag>Vue</tag>
        <tag>typescript</tag>
        <tag>Vue3</tag>
        <tag>Element</tag>
      </tags>
  </entry>
  <entry>
    <title>纯前端生成图片下载导出【html2canvas下载不显示的div】</title>
    <url>/2023/07/14/vue2-download-div/</url>
    <content><![CDATA[<!-- # 纯前端生成图片下载导出【html2canvas下载不显示的div】 -->
<h2 id="用html2canvas下载div"><a href="#用html2canvas下载div" class="headerlink" title="用html2canvas下载div"></a>用html2canvas下载div</h2><p>前端有块div元素，点击“下载”按钮后，利用<code>html2canvas</code>把div转为canvas，再下载成格式为<code>png</code>的图片。  </p>
<span id="more"></span>
<h3 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h3><p><img src="/2023/07/14/vue2-download-div/img1.jpeg" alt="page-img1" title="下载div为png"><br><img src="/2023/07/14/vue2-download-div/071401.gif" alt="page-gif1" title="下载div为png"></p>
<h3 id="源码"><a href="#源码" class="headerlink" title="源码"></a>源码</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;margin: 30px&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;downloadPng&quot;</span>&gt;</span>下载<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;download-content&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;pngRef&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span>&gt;</span>ID：&#123;&#123; state.id &#125;&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span>&gt;</span>模型号：&#123;&#123; state.model &#125;&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span>&gt;</span>创建者：&#123;&#123; state.create_by &#125;&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span>&gt;</span>更新者：&#123;&#123; state.update_by &#125;&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span>&gt;</span>描述：&#123;&#123; state.details &#125;&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">lang</span>=<span class="string">&quot;ts&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">import</span> &#123;<span class="title class_">Component</span>, <span class="title class_">Vue</span>&#125; <span class="keyword">from</span> <span class="string">&#x27;vue-property-decorator&#x27;</span></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">import</span> html2canvas <span class="keyword">from</span> <span class="string">&#x27;html2canvas&#x27;</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">@<span class="title class_">Component</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">  <span class="attr">components</span>: &#123;&#125;,</span></span><br><span class="line"><span class="language-javascript">  <span class="attr">filters</span>: &#123;&#125;,</span></span><br><span class="line"><span class="language-javascript">  <span class="attr">methods</span>: &#123;&#125;</span></span><br><span class="line"><span class="language-javascript">&#125;)</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">export</span> <span class="keyword">default</span> <span class="keyword">class</span> <span class="title class_">List</span> <span class="keyword">extends</span> <span class="title class_ inherited__">Vue</span> &#123;</span></span><br><span class="line"><span class="language-javascript">  private state = &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">id</span>: <span class="string">&#x27;0339734AD13&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">model</span>: <span class="string">&#x27;42&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">status</span>: <span class="number">1</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">create_time</span>: <span class="number">1688449325069</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">create_by</span>: <span class="string">&#x27;张三&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">update_by</span>: <span class="string">&#x27;李四&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">current_dept</span>: <span class="string">&#x27;5&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">details</span>: <span class="string">&#x27;这是一段描述&#x27;</span></span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript">  private <span class="title function_">downloadPng</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="comment">// 生成图片</span></span></span><br><span class="line"><span class="language-javascript">      <span class="title function_">html2canvas</span>((<span class="variable language_">this</span> <span class="keyword">as</span> any).<span class="property">$refs</span>.<span class="property">pngRef</span>, &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">backgroundColor</span>: <span class="string">&#x27;#ffffff&#x27;</span></span></span><br><span class="line"><span class="language-javascript">      &#125;).<span class="title function_">then</span>(<span class="function">(<span class="params">canvas</span>) =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">const</span> downloadUrl = canvas.<span class="title function_">toDataURL</span>(<span class="string">&#x27;image/jpeg&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 下载图片</span></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">let</span> aLink = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;a&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">        aLink.<span class="property">style</span>.<span class="property">display</span> = <span class="string">&#x27;none&#x27;</span></span></span><br><span class="line"><span class="language-javascript">        aLink.<span class="property">href</span> = downloadUrl</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">const</span> file_name = <span class="string">&#x27;img&#x27;</span> + <span class="string">&#x27;-&#x27;</span> + <span class="variable language_">this</span>.<span class="property">state</span>.<span class="property">id</span> + <span class="string">&#x27;.png&#x27;</span></span></span><br><span class="line"><span class="language-javascript">        aLink.<span class="property">download</span> = file_name</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 触发点击-然后移除</span></span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">document</span>.<span class="property">body</span>.<span class="title function_">appendChild</span>(aLink)</span></span><br><span class="line"><span class="language-javascript">        aLink.<span class="title function_">click</span>()</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">document</span>.<span class="property">body</span>.<span class="title function_">removeChild</span>(aLink)</span></span><br><span class="line"><span class="language-javascript">      &#125;)</span></span><br><span class="line"><span class="language-javascript">    &#125;, <span class="number">500</span>)</span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">lang</span>=<span class="string">&quot;scss&quot;</span> <span class="attr">scoped</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="selector-id">#download-content</span> &#123;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">margin</span>: <span class="number">30px</span>;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="built_in">rgb</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>);</span></span><br><span class="line"><span class="language-css">  <span class="attribute">text-align</span>: left;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">width</span>: fit-content;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">padding</span>: <span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="不显示div如何生成图片下载"><a href="#不显示div如何生成图片下载" class="headerlink" title="不显示div如何生成图片下载"></a>不显示div如何生成图片下载</h2><h3 id="效果-1"><a href="#效果-1" class="headerlink" title="效果"></a>效果</h3><p>前端不希望显示div，只显示一个下载按钮。<br>但是canvas必须要从一个dom元素转化而来，该如何做？<br><strong>利用css，前端隐藏div</strong></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">style=&quot;position: fixed; opacity: 0&quot;</span><br></pre></td></tr></table></figure>
<p><img src="/2023/07/14/vue2-download-div/img2.jpeg" alt="page-img2" title="下载隐藏的div为png"><br><img src="/2023/07/14/vue2-download-div/071402.gif" alt="page-gif2" title="下载隐藏的div为png"></p>
<h3 id="源码-1"><a href="#源码-1" class="headerlink" title="源码"></a>源码</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;margin: 30px&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;downloadLogo&quot;</span>&gt;</span>下载<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 这里加上css 不显示div元素 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;position: fixed; opacity: 0&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;download-content&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;pngRef&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span>ID：&#123;&#123; state.id &#125;&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span>模型号：&#123;&#123; state.model &#125;&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span>创建者：&#123;&#123; state.create_by &#125;&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span>更新者：&#123;&#123; state.update_by &#125;&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span>描述：&#123;&#123; state.details &#125;&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">lang</span>=<span class="string">&quot;ts&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">import</span> &#123;<span class="title class_">Component</span>, <span class="title class_">Vue</span>&#125; <span class="keyword">from</span> <span class="string">&#x27;vue-property-decorator&#x27;</span></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">import</span> html2canvas <span class="keyword">from</span> <span class="string">&#x27;html2canvas&#x27;</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">@<span class="title class_">Component</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">  <span class="attr">components</span>: &#123;&#125;,</span></span><br><span class="line"><span class="language-javascript">  <span class="attr">filters</span>: &#123;&#125;,</span></span><br><span class="line"><span class="language-javascript">  <span class="attr">methods</span>: &#123;&#125;</span></span><br><span class="line"><span class="language-javascript">&#125;)</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">export</span> <span class="keyword">default</span> <span class="keyword">class</span> <span class="title class_">List</span> <span class="keyword">extends</span> <span class="title class_ inherited__">Vue</span> &#123;</span></span><br><span class="line"><span class="language-javascript">  private state = &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">id</span>: <span class="string">&#x27;0339734AD13&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">model</span>: <span class="string">&#x27;42&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">status</span>: <span class="number">1</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">create_time</span>: <span class="number">1688449325069</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">create_by</span>: <span class="string">&#x27;张三&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">update_by</span>: <span class="string">&#x27;李四&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">current_dept</span>: <span class="string">&#x27;5&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">details</span>: <span class="string">&#x27;这是一段描述&#x27;</span></span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript">  private <span class="title function_">downloadLogo</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="comment">// 生成图片</span></span></span><br><span class="line"><span class="language-javascript">      <span class="title function_">html2canvas</span>((<span class="variable language_">this</span> <span class="keyword">as</span> any).<span class="property">$refs</span>.<span class="property">pngRef</span>, &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">backgroundColor</span>: <span class="string">&#x27;#ffffff&#x27;</span></span></span><br><span class="line"><span class="language-javascript">      &#125;).<span class="title function_">then</span>(<span class="function">(<span class="params">canvas</span>) =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">const</span> downloadUrl = canvas.<span class="title function_">toDataURL</span>(<span class="string">&#x27;image/jpeg&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 下载图片</span></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">let</span> aLink = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;a&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">        aLink.<span class="property">style</span>.<span class="property">display</span> = <span class="string">&#x27;none&#x27;</span></span></span><br><span class="line"><span class="language-javascript">        aLink.<span class="property">href</span> = downloadUrl</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">const</span> file_name = <span class="string">&#x27;img&#x27;</span> + <span class="string">&#x27;-&#x27;</span> + <span class="variable language_">this</span>.<span class="property">state</span>.<span class="property">id</span> + <span class="string">&#x27;.png&#x27;</span></span></span><br><span class="line"><span class="language-javascript">        aLink.<span class="property">download</span> = file_name</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 触发点击-然后移除</span></span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">document</span>.<span class="property">body</span>.<span class="title function_">appendChild</span>(aLink)</span></span><br><span class="line"><span class="language-javascript">        aLink.<span class="title function_">click</span>()</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">document</span>.<span class="property">body</span>.<span class="title function_">removeChild</span>(aLink)</span></span><br><span class="line"><span class="language-javascript">      &#125;)</span></span><br><span class="line"><span class="language-javascript">    &#125;, <span class="number">500</span>)</span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">lang</span>=<span class="string">&quot;scss&quot;</span> <span class="attr">scoped</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="selector-id">#download-content</span> &#123;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">margin</span>: <span class="number">30px</span>;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="built_in">rgb</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>);</span></span><br><span class="line"><span class="language-css">  <span class="attribute">text-align</span>: left;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">width</span>: fit-content;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">padding</span>: <span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>前端</category>
        <category>Vue</category>
      </categories>
      <tags>
        <tag>Vue</tag>
        <tag>Vue2</tag>
        <tag>typescript</tag>
      </tags>
  </entry>
  <entry>
    <title>前端生成二维码【Vue2+qrcodejs2】</title>
    <url>/2023/07/14/vue2-qrcode/</url>
    <content><![CDATA[<!-- # 前端生成二维码【Vue2+qrcodejs2】 -->
<h2 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h2><p>前端根据一段文本text生成二维码，扫码结果为这段text。  </p>
<span id="more"></span>
<p>这里的例子是【点击按钮，根据当前时间戳生成二维码】：<br><img src="/2023/07/14/vue2-qrcode/img1.jpeg" alt="page-img1" title="根据当前时间戳生成二维码"></p>
<p><img src="/2023/07/14/vue2-qrcode/071403.gif" alt="page-gif1" title="点击按钮，用最新的时间戳再次生成二维码"></p>
<h2 id="qrcodejs2生成二维码"><a href="#qrcodejs2生成二维码" class="headerlink" title="qrcodejs2生成二维码"></a>qrcodejs2生成二维码</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;margin: 30px&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;margin: 30px 0&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;changeQRcode&quot;</span>&gt;</span>根据当前时间戳生成二维码<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;margin: 30px 0&quot;</span>&gt;</span>当前时间戳:&#123;&#123; state.timestamp &#125;&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 这里是二维码的位置，利用ref属性 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">ref</span>=<span class="string">&quot;qrcodeRef&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">lang</span>=<span class="string">&quot;ts&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">import</span> &#123;<span class="title class_">Component</span>, <span class="title class_">Vue</span>&#125; <span class="keyword">from</span> <span class="string">&#x27;vue-property-decorator&#x27;</span></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">import</span> <span class="title class_">QRCode</span> <span class="keyword">from</span> <span class="string">&#x27;qrcodejs2&#x27;</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">@<span class="title class_">Component</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">  <span class="attr">components</span>: &#123;&#125;,</span></span><br><span class="line"><span class="language-javascript">  <span class="attr">filters</span>: &#123;&#125;,</span></span><br><span class="line"><span class="language-javascript">  <span class="attr">methods</span>: &#123;&#125;</span></span><br><span class="line"><span class="language-javascript">&#125;)</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">export</span> <span class="keyword">default</span> <span class="keyword">class</span> <span class="title class_">List</span> <span class="keyword">extends</span> <span class="title class_ inherited__">Vue</span> &#123;</span></span><br><span class="line"><span class="language-javascript">  private state = &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">timestamp</span>: <span class="number">0</span></span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript">  private <span class="title function_">changeQRcode</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="comment">// 获取当前时间戳</span></span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">const</span> now = <span class="keyword">new</span> <span class="title class_">Date</span>()</span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">const</span> now_ts = now.<span class="title function_">getTime</span>()</span></span><br><span class="line"><span class="language-javascript">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;当前时间戳&#x27;</span>, now_ts)</span></span><br><span class="line"><span class="language-javascript">      <span class="variable language_">this</span>.<span class="property">state</span>.<span class="property">timestamp</span> = now_ts</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">      <span class="comment">//生成二维码</span></span></span><br><span class="line"><span class="language-javascript">      ;(<span class="variable language_">this</span> <span class="keyword">as</span> any).<span class="property">$refs</span>.<span class="property">qrcodeRef</span>.<span class="property">innerHTML</span> = <span class="string">&#x27;&#x27;</span></span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">let</span> qrcode = <span class="keyword">new</span> <span class="title class_">QRCode</span>(<span class="variable language_">this</span>.<span class="property">$refs</span>.<span class="property">qrcodeRef</span>, &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 需要转换为二维码的内容</span></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// text的类型为string，把时间戳转为string</span></span></span><br><span class="line"><span class="language-javascript">        <span class="attr">text</span>: <span class="string">`<span class="subst">$&#123;now_ts&#125;</span>`</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">width</span>: <span class="number">100</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">height</span>: <span class="number">100</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">colorDark</span>: <span class="string">&#x27;#000000&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">colorLight</span>: <span class="string">&#x27;#ffffff&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">correctLevel</span>: <span class="title class_">QRCode</span>.<span class="property">CorrectLevel</span>.<span class="property">H</span></span></span><br><span class="line"><span class="language-javascript">      &#125;)</span></span><br><span class="line"><span class="language-javascript">    &#125;, <span class="number">500</span>)</span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">lang</span>=<span class="string">&quot;scss&quot;</span> <span class="attr">scoped</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>前端</category>
        <category>Vue</category>
      </categories>
      <tags>
        <tag>Vue</tag>
        <tag>Vue2</tag>
        <tag>typescript</tag>
      </tags>
  </entry>
  <entry>
    <title>git config全局配置和本地配置(当前仓库repo)</title>
    <url>/2023/07/17/git-config/</url>
    <content><![CDATA[<!-- # git config全局配置和本地配置(当前仓库repo) -->
<p>git有多个级别的配置文件，包括local、global、system、worktree等等。<br>通常会用到的是<code>global 全局配置</code>、<code>local 本地配置</code>。  </p>
<span id="more"></span>
<p><img src="/2023/07/17/git-config/img1.jpeg" alt="page-img1" title="git config的不同级别的配置"></p>
<h2 id="local本地配置"><a href="#local本地配置" class="headerlink" title="local本地配置"></a>local本地配置</h2><h3 id="修改local配置"><a href="#修改local配置" class="headerlink" title="修改local配置"></a>修改local配置</h3><p>修改local的配置，即为修改当前本地仓库的git配置。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git config user.name hengqu4</span><br><span class="line">git config user.email 529914423@qq.com</span><br></pre></td></tr></table></figure>
<h3 id="查看local配置"><a href="#查看local配置" class="headerlink" title="查看local配置"></a>查看local配置</h3><p>修改后查看local本地配置：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git config --local --list</span><br></pre></td></tr></table></figure>
<p><img src="/2023/07/17/git-config/img2.jpeg" alt="page-img2" title="查看git config --local本地配置"></p>
<h2 id="global全局配置"><a href="#global全局配置" class="headerlink" title="global全局配置"></a>global全局配置</h2><p><code>git config --global</code>的配置，即为本机所有git仓库的config配置。<br>但是也有一些仓库配置了local，local的配置优先级高于global。  </p>
<h3 id="修改global配置"><a href="#修改global配置" class="headerlink" title="修改global配置"></a>修改global配置</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git config --global user.name hengqu4</span><br><span class="line">git config --global user.email 529914423@qq.com</span><br></pre></td></tr></table></figure>
<h3 id="查看global配置"><a href="#查看global配置" class="headerlink" title="查看global配置"></a>查看global配置</h3><p>查看local本地配置：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git config --global --list</span><br></pre></td></tr></table></figure>
<p><img src="/2023/07/17/git-config/img3.png" alt="page-img3" title="查看git config -global全局配置"></p>
]]></content>
      <categories>
        <category>git</category>
      </categories>
      <tags>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title>git删除某个文件的所有历史commit</title>
    <url>/2023/07/17/git-delete-file-commit/</url>
    <content><![CDATA[<!-- # git删除某个文件的所有历史commit -->

<p><strong>场景</strong><br>之前该仓库为private，现在想要改为public可见，那么需要删除某些隐私文件以及其所有相关的历史commit。</p>
<span id="more"></span>  
<p>例如需要删除<code>yarn.lock</code>文件：<br>仅删除<code>yarn.lock</code>并push是不对的，因为其他用户可以在commit中找到它。  </p>
<p>我们需要删除<code>yarn.lock</code>以及<code>yarn.lock</code>所有commit记录。  </p>
<p><strong>git命令</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git filter-branch -f --tree-filter &#x27;rm -rf yarn.lock&#x27; HEAD</span><br><span class="line">git push origin -f</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>git</category>
      </categories>
      <tags>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title>git提交后个人资料下没显示commit贡献小绿点？【修改历史commit的author邮箱】</title>
    <url>/2023/07/17/git-edit-commit-author/</url>
    <content><![CDATA[<!-- # git提交后个人资料下没显示commit贡献小绿点？【修改历史commit的author邮箱】 -->
<h2 id="问题场景"><a href="#问题场景" class="headerlink" title="问题场景"></a>问题场景</h2><p>已经<code>git push origin</code>并且成功push了，仓库里也出现了commit记录，但是在github个人主页却没有显示出小绿点。<br><img src="/2023/07/17/git-edit-commit-author/img1.jpeg" alt="page-img1" title="github个人主页commit当天没显示出小绿点"></p>
<span id="more"></span>

<p>查看一下历史commit的提交作者是不是其他git用户:  </p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git log</span><br></pre></td></tr></table></figure>
<p><img src="/2023/07/17/git-edit-commit-author/img2.jpeg" alt="page-img2" title="近2次的commit的Author错了"></p>
<h2 id="若因commit的Author有错，先改对"><a href="#若因commit的Author有错，先改对" class="headerlink" title="若因commit的Author有错，先改对"></a>若因commit的Author有错，先改对</h2><blockquote>
<p>git config全局配置和本地配置(当前仓库repo):<br><a href="https://hengqu4.github.io/2023/07/17/git-config/">https://hengqu4.github.io/2023/07/17/git-config/</a>  </p>
</blockquote>
<p>修改git的本地配置  </p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git config user.name hengqu4</span><br><span class="line">git config user.email 529914423@qq.com</span><br></pre></td></tr></table></figure>
<p>修改git的全局配置  </p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git config --global user.name hengqu4</span><br><span class="line">git config --global user.email 529914423@qq.com</span><br></pre></td></tr></table></figure>
<h2 id="git-rebase-i对历史提交进行处理"><a href="#git-rebase-i对历史提交进行处理" class="headerlink" title="git rebase -i对历史提交进行处理"></a>git rebase -i对历史提交进行处理</h2><h3 id="编辑最新的几次commit"><a href="#编辑最新的几次commit" class="headerlink" title="编辑最新的几次commit"></a>编辑最新的几次commit</h3><p>发现近2次的commit的提交者Author不是自己，重新设置基准线，回退到2次之前：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git rebase -i HEAD~2</span><br></pre></td></tr></table></figure>
<p>之后会自动进入 vi ，按下i键进入编辑模式；<br><img src="/2023/07/17/git-edit-commit-author/img3.jpeg" alt="page-img3" title="输入git rebase -i HEAD~2 之后的终端显示界面"><br><img src="/2023/07/17/git-edit-commit-author/img4.jpeg" alt="page-img4" title="按下i键进入编辑模式"></p>
<p>把前缀从<code>pick</code>改为<code>e</code>或者<code>edit</code>；<br><img src="/2023/07/17/git-edit-commit-author/img5.jpeg" alt="page-img5" title="把`pick`改为`e`或者`edit`"><br>编辑完后按下<code>esc</code>键退出编辑模式，再输入<code>:wq!</code>按下回车保存编辑并退出vi；<br><img src="/2023/07/17/git-edit-commit-author/img6.jpeg" alt="page-img6" title="保存编辑并退出vi"></p>
<p>此时回到了需要处理的commit。<br><img src="/2023/07/17/git-edit-commit-author/img7.jpeg" alt="page-img7" title="回到了需要处理的commit"></p>
<h3 id="编辑历史提交中的某几次（包括第一次）的commit"><a href="#编辑历史提交中的某几次（包括第一次）的commit" class="headerlink" title="编辑历史提交中的某几次（包括第一次）的commit"></a>编辑历史提交中的某几次（包括第一次）的commit</h3><p>如果是更新中间某几次的commit信息或者第一次commit的信息，可以输入<code>git rebase -i --root</code>回退到第一次提交。  </p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git rebase -i --root</span><br></pre></td></tr></table></figure>
<p>再在其中选择需要修改的commit，把它们的前缀从<code>pick</code>改为<code>e</code>，其他操作一样。  </p>
<h2 id="修改commit的Author"><a href="#修改commit的Author" class="headerlink" title="修改commit的Author"></a>修改commit的Author</h2><p>我们需要修改的是提交者Author，输入以下命令：  </p>
<blockquote>
<p>hengqu4是git的user.name<br><a href="mailto:&#x35;&#50;&#57;&#x39;&#49;&#x34;&#x34;&#x32;&#51;&#x40;&#113;&#113;&#46;&#99;&#x6f;&#x6d;">&#x35;&#50;&#57;&#x39;&#49;&#x34;&#x34;&#x32;&#51;&#x40;&#113;&#113;&#46;&#99;&#x6f;&#x6d;</a>是git的user.email<br>这里请替换成你自己的名称和邮箱  </p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git commit --amend --author &quot;hengqu4 &lt;529914423@qq.com&gt;&quot;</span><br></pre></td></tr></table></figure>
<p>按下回车后进入vi模式，我们直接输入<code>wq!</code>+按下回车即可；<br><img src="/2023/07/17/git-edit-commit-author/img8.jpeg" alt="page-img8" title="直接输入`wq!`，按下回车退出"></p>
<p>输入命令进行到下一个需要处理的commit，也就是下一个我们之前把<code>pick</code>改为<code>e</code>的commit。  </p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git rebase --continue</span><br></pre></td></tr></table></figure>
<p><img src="/2023/07/17/git-edit-commit-author/img9.jpeg" alt="page-img9" title="之后一直重复上面2个命令"><br>之后一直重复上面2个命令，直到所有需要编辑的commit都处理过了  </p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git commit --amend --author &quot;hengqu4 &lt;529914423@qq.com&gt;&quot;</span><br><span class="line">git rebase --continue</span><br></pre></td></tr></table></figure>
<p>当某次输入了<code>git rebase --continue</code>后，终端出现了<code>成功变基并更新 refs/heads/...</code>的提示时停止操作，意味着所有需要编辑的commit都处理过了。<br><img src="/2023/07/17/git-edit-commit-author/imga.jpeg" alt="page-imga" title="出现这条提示意味着 所有需要编辑的commit都处理过了">  </p>
<h2 id="成功修改后push到远程仓库"><a href="#成功修改后push到远程仓库" class="headerlink" title="成功修改后push到远程仓库"></a>成功修改后push到远程仓库</h2><p>为了验证是否历史commit编辑成功，可以输入<code>git log</code>查看最新的commit记录信息。<br>这里可以看到之前2次作者错误的commit已经被修正了：<br><img src="/2023/07/17/git-edit-commit-author/imgb.jpeg" alt="page-imgb" title="最新2次的commit的Author已经被修正了"><br>上述操作只是更新了本地的commit信息，我们还需要更新远程仓库的commit信息。<br>输入以下命令：  </p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git push origin -f</span><br></pre></td></tr></table></figure>
<p><img src="/2023/07/17/git-edit-commit-author/imgc.jpeg" alt="page-imgc" title="更新远程仓库commit的Author"></p>
]]></content>
      <categories>
        <category>git</category>
      </categories>
      <tags>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title>飞书小程序下载文件相关API(本地、Storage)</title>
    <url>/2023/07/18/feishu-download-file/</url>
    <content><![CDATA[<!-- # 飞书小程序下载文件相关API(本地、Storage) -->
<h2 id="场景描述"><a href="#场景描述" class="headerlink" title="场景描述"></a>场景描述</h2><p>在飞书小程序中，调用后端下载请求API下载文件，期望可以保存在<code>手机本地</code>&#x2F;<code>飞书本地</code>&#x2F;<code>飞书临时目录</code>&#x2F;<code>飞书缓存</code>。 </p>
<p>在网络上找的下载url，在后端还没给API之前测试用的：<br><a href="http://files.cnblogs.com/MolbyHome/%E6%83%B3%E6%B3%95.rar">http://files.cnblogs.com/MolbyHome/%E6%83%B3%E6%B3%95.rar</a><br><a href="https://cdn.jsdelivr.net/gh/belaviyo/download-with/samples/sample.zip">https://cdn.jsdelivr.net/gh/belaviyo/download-with/samples/sample.zip</a> </p>
<h2 id="文件系统"><a href="#文件系统" class="headerlink" title="文件系统"></a>文件系统</h2><blockquote>
<p>飞书小程序文件系统：<a href="https://open.feishu.cn/document/client-docs/gadget/-web-app-api/file/file-system">https://open.feishu.cn/document/client-docs/gadget/-web-app-api/file/file-system</a>  </p>
</blockquote>
<p>本地临时文件(以ttfile:&#x2F;&#x2F;temp开头)：临时产生，小程序重启会被清空的文件。<br>本地用户文件(以ttfile:&#x2F;&#x2F;user开头)：小程序通过接口把本地临时文件保存后产生的文件，每个小程序最多可存储 200MB。</p>
<h2 id="选择手机本地文件系统的文件"><a href="#选择手机本地文件系统的文件" class="headerlink" title="选择手机本地文件系统的文件"></a>选择手机本地文件系统的文件</h2><p>用到的飞书小程序接口<code>tt.filepicker</code><br><a href="https://open.feishu.cn/document/client-docs/gadget/-web-app-api/file/filepicker">https://open.feishu.cn/document/client-docs/gadget/-web-app-api/file/filepicker</a>  </p>
<p><strong>index.mpx</strong></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">view</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;container&quot;</span>&gt;</span></span><br><span class="line">      打开手机本地文件系统</span><br><span class="line">      <span class="tag">&lt;<span class="name">button</span> <span class="attr">bindtap</span>=<span class="string">&quot;openFileSystem&quot;</span>&gt;</span>选择本地文件<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">lang</span>=<span class="string">&quot;ts&quot;</span> <span class="attr">src</span>=<span class="string">&quot;./index.ts&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p><strong>index.ts</strong></p>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> mpx, &#123; createPage &#125; <span class="keyword">from</span> <span class="string">&quot;@mpxjs/core&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="title function_">createPage</span>(&#123;</span><br><span class="line">  <span class="attr">data</span>: &#123;</span><br><span class="line">    <span class="attr">chooseFile</span>: &#123;&#125;,</span><br><span class="line">  &#125;,</span><br><span class="line"></span><br><span class="line">  <span class="attr">methods</span>: &#123;</span><br><span class="line">    <span class="comment">// 打开手机本地文件系统,选择文件后，这里会把文件存到飞书临时目录下 ttfile://temp</span></span><br><span class="line">    <span class="title function_">openFileSystem</span>(<span class="params"></span>) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;打开文件系统，选择目标文件&quot;</span>);</span><br><span class="line">      tt.<span class="title function_">filePicker</span>(&#123;</span><br><span class="line">        <span class="attr">maxNum</span>: <span class="number">10</span>,</span><br><span class="line">        <span class="attr">pickerTitle</span>: <span class="string">&quot;Select a file&quot;</span>,</span><br><span class="line">        <span class="attr">pickerConfirm</span>: <span class="string">&quot;Confirm&quot;</span>,</span><br><span class="line">        <span class="attr">isSystem</span>: <span class="literal">false</span>,</span><br><span class="line">        <span class="attr">success</span>: <span class="function">(<span class="params">res</span>) =&gt;</span> &#123;</span><br><span class="line">          <span class="variable language_">console</span>.<span class="title function_">log</span>(res);</span><br><span class="line">          <span class="variable language_">this</span>.<span class="property">chooseFile</span> = res.<span class="property">list</span>[<span class="number">0</span>];</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">fail</span>: <span class="function">(<span class="params">res</span>) =&gt;</span> &#123;</span><br><span class="line">          <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;filePicker fail:&quot;</span>, res);</span><br><span class="line">        &#125;,</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;);</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><img src="/2023/07/18/feishu-download-file/img1.jpeg" alt="page-img1" title="选择文件后，小程序会把文件存到飞书临时目录下 ttfile://temp">  </p>
<h2 id="下载并存储到Storage"><a href="#下载并存储到Storage" class="headerlink" title="下载并存储到Storage"></a>下载并存储到Storage</h2><p>请求下载时responseType为<code>arraybuffer</code>，并且把文件存在Storage。<br><img src="/2023/07/18/feishu-download-file/img3.jpeg" alt="page-img3" title="飞书小程序的Storage缓存区">  </p>
<h3 id="Storage简介"><a href="#Storage简介" class="headerlink" title="Storage简介"></a>Storage简介</h3><blockquote>
<p>飞书官网：<a href="https://open.feishu.cn/document/client-docs/gadget/-web-app-api/cache/local-data-cache">https://open.feishu.cn/document/client-docs/gadget/-web-app-api/cache/local-data-cache</a>  </p>
</blockquote>
<p>小程序可以通过下面列出的API读取、写入、删除、清理本地缓存数据，与 LocalStorage 类似。  </p>
<p>以「键值对」的形式设置本地缓存数据。  </p>
<p>单个 key 允许存储的最大数据长度为 <strong>1MB</strong>，所有数据存储上限为 <strong>10MB</strong>，同时也受到用户设备存储空间、缓存清理等机制的限制，可能会导致信息丢失，因此请不要将重要数据存放在本地数据缓存。</p>
<p><strong>setStorage</strong><br><a href="https://open.feishu.cn/document/client-docs/gadget/-web-app-api/cache/setstorage">https://open.feishu.cn/document/client-docs/gadget/-web-app-api/cache/setstorage</a>    </p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">tt.<span class="title function_">setStorage</span>(&#123;</span><br><span class="line">    <span class="attr">key</span>: <span class="string">&quot;name&quot;</span>,</span><br><span class="line">    <span class="attr">data</span>: <span class="string">&quot;小王&quot;</span>,</span><br><span class="line">    <span class="title function_">success</span>(<span class="params">res</span>) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">JSON</span>.<span class="title function_">stringify</span>(res));</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="title function_">fail</span>(<span class="params">res</span>) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`setStorage fail: <span class="subst">$&#123;<span class="built_in">JSON</span>.stringify(res)&#125;</span>`</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<p><strong>getStorage</strong><br><a href="https://open.feishu.cn/document/client-docs/gadget/-web-app-api/cache/getstorage">https://open.feishu.cn/document/client-docs/gadget/-web-app-api/cache/getstorage</a>    </p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">tt.<span class="title function_">getStorage</span>(&#123;</span><br><span class="line">    <span class="attr">key</span>: <span class="string">&quot;name&quot;</span>,</span><br><span class="line">    <span class="title function_">success</span>(<span class="params">res</span>) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">JSON</span>.<span class="title function_">stringify</span>(res));</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="title function_">fail</span>(<span class="params">res</span>) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`getStorage fail: <span class="subst">$&#123;<span class="built_in">JSON</span>.stringify(res)&#125;</span>`</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<p>更多接口请前往官网查看：</p>
<blockquote>
<p><a href="https://open.feishu.cn/document/client-docs/gadget/-web-app-api/cache/local-data-cache">https://open.feishu.cn/document/client-docs/gadget/-web-app-api/cache/local-data-cache</a></p>
</blockquote>
<ul>
<li>getStorage</li>
<li>getStorageSync</li>
<li>setStorage</li>
<li>setStorageSync</li>
<li>removeStorage</li>
<li>removeStorageSync</li>
<li>clearStorage</li>
<li>clearStorageSync</li>
<li>getStorageInfo</li>
<li>getStorageInfoSync</li>
</ul>
<h3 id="下载文件存到Storage"><a href="#下载文件存到Storage" class="headerlink" title="下载文件存到Storage"></a>下载文件存到Storage</h3><p>用到的接口  </p>
<p><code>tt.request</code>:<br><a href="https://open.feishu.cn/document/client-docs/gadget/-web-app-api/network/initiating-request/request">https://open.feishu.cn/document/client-docs/gadget/-web-app-api/network/initiating-request/request</a>  </p>
<p><code>tt.setStorage</code>:<a href="https://open.feishu.cn/document/client-docs/gadget/-web-app-api/cache/setstorage">https://open.feishu.cn/document/client-docs/gadget/-web-app-api/cache/setstorage</a>    </p>
<p><code>tt.getStorage</code>:<br><a href="https://open.feishu.cn/document/client-docs/gadget/-web-app-api/cache/getstorage">https://open.feishu.cn/document/client-docs/gadget/-web-app-api/cache/getstorage</a>    </p>
<p><strong>index.mpx</strong></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">view</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;container&quot;</span>&gt;</span></span><br><span class="line">      下载文件,存到Storage (ArrayBuffer)</span><br><span class="line">      <span class="tag">&lt;<span class="name">button</span> <span class="attr">bindtap</span>=<span class="string">&quot;onDownloadStorage&quot;</span> <span class="attr">style</span>=<span class="string">&quot;background-color: #55efc4&quot;</span>&gt;</span>下载文件<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">button</span> <span class="attr">bindtap</span>=<span class="string">&quot;readStorageFile&quot;</span>&gt;</span>读取文件<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">lang</span>=<span class="string">&quot;ts&quot;</span> <span class="attr">src</span>=<span class="string">&quot;./index.ts&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p><strong>index.ts</strong></p>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> mpx, &#123; createPage &#125; <span class="keyword">from</span> <span class="string">&quot;@mpxjs/core&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="title function_">createPage</span>(&#123;</span><br><span class="line">  <span class="attr">methods</span>: &#123;</span><br><span class="line">    <span class="comment">// 下载文件,类型为ArrayBuffer,存到Storage</span></span><br><span class="line">    <span class="title function_">onDownloadStorage</span>(<span class="params"></span>) &#123;</span><br><span class="line">      <span class="keyword">const</span> url =</span><br><span class="line">        <span class="string">&quot;https://freetestdata.com/wp-content/uploads/2021/09/Free_Test_Data_200KB_CSV-1.csv&quot;</span>;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;下载文件===&quot;</span>);</span><br><span class="line">      <span class="comment">// 类型为arraybuffer</span></span><br><span class="line">      tt.<span class="title function_">request</span>(&#123;</span><br><span class="line">        url,</span><br><span class="line">        <span class="attr">responseType</span>: <span class="string">&quot;arraybuffer&quot;</span>,</span><br><span class="line">        <span class="attr">success</span>: <span class="function">(<span class="params">res</span>) =&gt;</span> &#123;</span><br><span class="line">          <span class="keyword">if</span> (res.<span class="property">data</span>) &#123;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;download file success&quot;</span>, res);</span><br><span class="line">            <span class="keyword">const</span> &#123; <span class="attr">data</span>: arraybuffer &#125; = res;</span><br><span class="line">            <span class="keyword">const</span> byteArr = <span class="keyword">new</span> <span class="title class_">Uint8Array</span>(arraybuffer);</span><br><span class="line">            <span class="keyword">const</span> arr = <span class="title class_">Array</span>.<span class="title function_">from</span>(byteArr);</span><br><span class="line">            <span class="comment">// 保存为Array</span></span><br><span class="line">            tt.<span class="title function_">setStorage</span>(&#123;</span><br><span class="line">              <span class="attr">key</span>: <span class="string">&#x27;test-file&#x27;</span>,</span><br><span class="line">              <span class="attr">data</span>: arr,</span><br><span class="line">              <span class="attr">success</span>: <span class="function">(<span class="params">res</span>) =&gt;</span> &#123;</span><br><span class="line">                <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;setStorage success&quot;</span>, res);</span><br><span class="line">              &#125;,</span><br><span class="line">              <span class="attr">fail</span>: <span class="function">(<span class="params">res</span>) =&gt;</span> &#123;</span><br><span class="line">                <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&quot;setStorage fail&quot;</span>, res);</span><br><span class="line">              &#125;,</span><br><span class="line">            &#125;);</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">fail</span>: <span class="function">(<span class="params">err</span>) =&gt;</span> &#123;</span><br><span class="line">          <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&quot;download file fail&quot;</span>, err);</span><br><span class="line">        &#125;,</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 读取存到Storage的文件</span></span><br><span class="line">    <span class="title function_">readStorageFile</span>(<span class="params"></span>) &#123;</span><br><span class="line">      <span class="comment">// 获取本地缓存数据的相关信息:</span></span><br><span class="line">      <span class="comment">// 1.所有键名列表</span></span><br><span class="line">      <span class="comment">// 2.占用空间大小，以 KB 为单位</span></span><br><span class="line">      <span class="comment">// 3.存储空间上限，以 KB 为单位，一般来说会返回 10240</span></span><br><span class="line">      <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="keyword">const</span> result = tt.<span class="title function_">getStorageInfoSync</span>();</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`缓存信息 success: <span class="subst">$&#123;<span class="built_in">JSON</span>.stringify(result)&#125;</span>`</span>);</span><br><span class="line">      &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`缓存信息 fail: <span class="subst">$&#123;<span class="built_in">JSON</span>.stringify(error)&#125;</span>`</span>);</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="comment">// 根据key值读取相应的缓存数据</span></span><br><span class="line">      tt.<span class="title function_">getStorage</span>(&#123;</span><br><span class="line">        <span class="attr">key</span>: <span class="string">&#x27;test-file&#x27;</span>,</span><br><span class="line">        <span class="attr">success</span>: <span class="function">(<span class="params">res</span>) =&gt;</span> &#123;</span><br><span class="line">          <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;getStorage success。&quot;</span>,res);</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">fail</span>: <span class="function">(<span class="params">res</span>) =&gt;</span> &#123;</span><br><span class="line">          <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&quot;getStorage fail&quot;</span>, res);</span><br><span class="line">        &#125;,</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;);</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>飞书小程序下载文件并存到Storage<br><img src="/2023/07/18/feishu-download-file/img4.jpeg" alt="page-img4" title="飞书小程序下载文件并存到Storage"><br>飞书小程序的Storage出现了缓存数据<br><img src="/2023/07/18/feishu-download-file/img5.jpeg" alt="page-img5" title="飞书小程序的Storage出现了缓存数据">  </p>
<h2 id="下载到飞书本地临时目录"><a href="#下载到飞书本地临时目录" class="headerlink" title="下载到飞书本地临时目录"></a>下载到飞书本地临时目录</h2><p>用到的飞书小程序接口<code>tt.downloadFile</code><br><a href="https://open.feishu.cn/document/client-docs/gadget/-web-app-api/network/download/downloadfile">https://open.feishu.cn/document/client-docs/gadget/-web-app-api/network/download/downloadfile</a>  </p>
<p><strong>index.mpx</strong></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">view</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;container&quot;</span>&gt;</span></span><br><span class="line">      下载文件,存到临时目录</span><br><span class="line">      <span class="tag">&lt;<span class="name">button</span> <span class="attr">bindtap</span>=<span class="string">&quot;onDownload&quot;</span> <span class="attr">style</span>=<span class="string">&quot;background-color: #55efc4&quot;</span>&gt;</span>下载文件<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">lang</span>=<span class="string">&quot;ts&quot;</span> <span class="attr">src</span>=<span class="string">&quot;./index.ts&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><strong>index.ts</strong></p>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> mpx, &#123; createPage &#125; <span class="keyword">from</span> <span class="string">&quot;@mpxjs/core&quot;</span>;</span><br><span class="line"><span class="title function_">createPage</span>(&#123;</span><br><span class="line">  <span class="attr">methods</span>: &#123;</span><br><span class="line">    <span class="comment">// 下载文件,存到临时目录</span></span><br><span class="line">    <span class="title function_">onDownload</span>(<span class="params"></span>) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;下载文件&quot;</span>);</span><br><span class="line">      tt.<span class="title function_">downloadFile</span>(&#123;</span><br><span class="line">        <span class="attr">url</span>: <span class="string">&quot;http://files.cnblogs.com/MolbyHome/%E6%83%B3%E6%B3%95.rar&quot;</span>,</span><br><span class="line">        <span class="attr">success</span>: <span class="function">(<span class="params">res</span>) =&gt;</span> &#123;</span><br><span class="line">          <span class="variable language_">console</span>.<span class="title function_">log</span>(res);</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">fail</span>: <span class="function">(<span class="params">res</span>) =&gt;</span> &#123;</span><br><span class="line">          <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;downloadFile fail:&quot;</span>, res);</span><br><span class="line">        &#125;,</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;);</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p><img src="/2023/07/18/feishu-download-file/img2.jpeg" alt="page-img2" title="调用下载请求后，小程序会把文件存到飞书临时目录下 ttfile://temp">  </p>
<h2 id="下载到飞书本地目录"><a href="#下载到飞书本地目录" class="headerlink" title="下载到飞书本地目录"></a>下载到飞书本地目录</h2><p><strong>注意</strong>：这里的本地目录是指飞书提供的隔离空间<code>ttfile://user/</code>，不是手机系统本地目录。  </p>
<p>方法：<br>飞书调用了<code>downloadFile</code>API只能把文件下载到临时目录，不能直接飞书本地目录。<br>但是飞书可以把临时目录中的文件存到飞书本地目录<code>tt.saveFile</code>。  </p>
<blockquote>
<p><code>tt.saveFile</code>: 该 API 会把临时文件移动到永久目录（目录最大200M），所以在调用成功后原文件路径将访问失败。<br><a href="https://open.feishu.cn/document/client-docs/gadget/-web-app-api/file/file_system_manager/file_system_manager_save_file">https://open.feishu.cn/document/client-docs/gadget/-web-app-api/file/file_system_manager/file_system_manager_save_file</a>  </p>
</blockquote>
<p>因此，这里可以<strong>先把文件下载到临时目录，再把飞书临时目录中的文件存到飞书本地目录</strong>。  </p>
<p><strong>index.mpx</strong></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">view</span> &gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- fix 垂直塌陷 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">view</span> <span class="attr">style</span>=<span class="string">&quot;content: &#x27;&#x27;; overflow: hidden;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">view</span> <span class="attr">style</span>=<span class="string">&quot;color:blue;margin:30px&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">button</span> <span class="attr">bindtap</span>=<span class="string">&quot;downloadFile&quot;</span>&gt;</span>下载文件并保存到本地<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">button</span> <span class="attr">bindtap</span>=<span class="string">&quot;openDir&quot;</span>&gt;</span>打印/user/所有文件列表<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">button</span> <span class="attr">bindtap</span>=<span class="string">&quot;clearDir&quot;</span>&gt;</span>清空本地文件<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">import</span> &#123; createPage &#125; <span class="keyword">from</span> <span class="string">&#x27;@mpxjs/core&#x27;</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="title function_">createPage</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">methods</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="comment">// 打印本地目录下所有文件的名称</span></span></span><br><span class="line"><span class="language-javascript">      <span class="title function_">openDir</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">const</span> fileSystemManager = tt.<span class="title function_">getFileSystemManager</span>()</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">try</span> &#123;</span></span><br><span class="line"><span class="language-javascript">          <span class="keyword">const</span> files = fileSystemManager.<span class="title function_">readdirSync</span>(<span class="string">&#x27;ttfile://user/&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">          <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;调用成功&#x27;</span>, files)</span></span><br><span class="line"><span class="language-javascript">        &#125; <span class="keyword">catch</span> (err) &#123;</span></span><br><span class="line"><span class="language-javascript">          <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;调用失败&#x27;</span>, err)</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">      &#125;,</span></span><br><span class="line"><span class="language-javascript">      </span></span><br><span class="line"><span class="language-javascript">      <span class="comment">// 下载文件</span></span></span><br><span class="line"><span class="language-javascript">      <span class="title function_">downloadFile</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        wx.<span class="title function_">showLoading</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">          <span class="attr">title</span>: <span class="string">&#x27;下载中&#x27;</span></span></span><br><span class="line"><span class="language-javascript">        &#125;)</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">const</span> file = &#123;</span></span><br><span class="line"><span class="language-javascript">          <span class="attr">name</span>:<span class="string">&#x27;file-1.bin&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">          <span class="attr">size</span>: <span class="number">21.3</span>,</span></span><br><span class="line"><span class="language-javascript">          <span class="attr">version</span>: <span class="string">&#x27;V3.1&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">          <span class="attr">date</span>: <span class="string">&#x27;2023/01/21&#x27;</span> </span></span><br><span class="line"><span class="language-javascript">        &#125;,</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;下载升级文件&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 下载文件,存到临时目录</span></span></span><br><span class="line"><span class="language-javascript">        tt.<span class="title function_">downloadFile</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">          <span class="attr">url</span>: <span class="string">&#x27;https://cdn.jsdelivr.net/gh/belaviyo/download-with/samples/sample.zip&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">          <span class="attr">success</span>: <span class="function">(<span class="params">res</span>) =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;存到临时目录&#x27;</span>, res)</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">const</span> tempFilePath = res.<span class="property">tempFilePath</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">            <span class="comment">// 把文件从临时目录保存到本地目录</span></span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">if</span> (res.<span class="property">statusCode</span> === <span class="number">200</span> &amp;&amp; tempFilePath) &#123;</span></span><br><span class="line"><span class="language-javascript">              tt.<span class="title function_">saveFile</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">                tempFilePath,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">filePath</span>: <span class="string">&#x27;ttfile://user/&#x27;</span> + file.<span class="property">name</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">success</span>: <span class="function">(<span class="params">res</span>) =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">                  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`<span class="subst">$&#123;<span class="built_in">JSON</span>.stringify(res)&#125;</span>`</span>)</span></span><br><span class="line"><span class="language-javascript">                &#125;,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">fail</span>: <span class="function">(<span class="params">res</span>) =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">                  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`saveFile fail: <span class="subst">$&#123;<span class="built_in">JSON</span>.stringify(res)&#125;</span>`</span>)</span></span><br><span class="line"><span class="language-javascript">                &#125;</span></span><br><span class="line"><span class="language-javascript">              &#125;)</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">            wx.<span class="title function_">hideLoading</span>()</span></span><br><span class="line"><span class="language-javascript">          &#125;,</span></span><br><span class="line"><span class="language-javascript">          <span class="attr">fail</span>: <span class="function">(<span class="params">res</span>) =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;downloadFile fail:&#x27;</span>, res)</span></span><br><span class="line"><span class="language-javascript">            wx.<span class="title function_">hideLoading</span>()</span></span><br><span class="line"><span class="language-javascript">          &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;)</span></span><br><span class="line"><span class="language-javascript">      &#125;,</span></span><br><span class="line"><span class="language-javascript">      </span></span><br><span class="line"><span class="language-javascript">      <span class="comment">// 删除本地目录的文件</span></span></span><br><span class="line"><span class="language-javascript">      <span class="title function_">removeSavedFile</span>(<span class="params">fileList</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">const</span> fileSystemManager = tt.<span class="title function_">getFileSystemManager</span>()</span></span><br><span class="line"><span class="language-javascript">        fileList.<span class="title function_">forEach</span>(<span class="function">(<span class="params">file</span>) =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">          <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;准备删除文件:&#x27;</span>, <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(file))</span></span><br><span class="line"><span class="language-javascript">          fileSystemManager.<span class="title function_">removeSavedFile</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">filePath</span>: file.<span class="property">filePath</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">success</span>: <span class="function">(<span class="params">res</span>) =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">              <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`<span class="subst">$&#123;file.filePath&#125;</span> 删除成功`</span>)</span></span><br><span class="line"><span class="language-javascript">            &#125;,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">fail</span>: <span class="function">(<span class="params">res</span>) =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">              <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">`<span class="subst">$&#123;file.filePath&#125;</span> 删除失败`</span>, res.<span class="property">errMsg</span>)</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">          &#125;)</span></span><br><span class="line"><span class="language-javascript">        &#125;)</span></span><br><span class="line"><span class="language-javascript">      &#125;,</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">      <span class="comment">// 清空本地目录</span></span></span><br><span class="line"><span class="language-javascript">      <span class="comment">// 先遍历本地目录的文件，再去删除这些文件</span></span></span><br><span class="line"><span class="language-javascript">      <span class="title function_">clearDir</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;清空本地目录文件&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">const</span> fileSystemManager = tt.<span class="title function_">getFileSystemManager</span>()</span></span><br><span class="line"><span class="language-javascript">        fileSystemManager.<span class="title function_">getSavedFileList</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">          <span class="attr">success</span>: <span class="function">(<span class="params">res</span>) =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;当前用户目录下的文件:&#x27;</span>, res)</span></span><br><span class="line"><span class="language-javascript">            <span class="variable language_">this</span>.<span class="title function_">removeSavedFile</span>(res.<span class="property">fileList</span>)</span></span><br><span class="line"><span class="language-javascript">          &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;)</span></span><br><span class="line"><span class="language-javascript">      &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">  &#125;)</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">lang</span>=<span class="string">&quot;scss&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<ol>
<li>下载文件到临时目录   </li>
<li>把文件从临时目录保存到本地目录  </li>
<li>打印本地目录下所有文件的名称</li>
</ol>
<div align="center">
  <img src="/2023/07/18/feishu-download-file/img6.jpeg" width="50%" alt="经过123步后的控制台输出">
</div>

  
<ol start="4">
<li>清空本地文件目录（先遍历本地目录的文件，再去删除这些文件）</li>
</ol>
<div align="center">
  <img src="/2023/07/18/feishu-download-file/img7.jpeg" width="50%" alt="清空本地文件目录的控制台输出">
</div>
]]></content>
      <categories>
        <category>前端</category>
        <category>Mpx</category>
      </categories>
      <tags>
        <tag>javascript</tag>
        <tag>Mpx</tag>
        <tag>小程序</tag>
        <tag>飞书小程序</tag>
      </tags>
  </entry>
  <entry>
    <title>React纯前端实现把div(含有Echart)下载导出为word文档</title>
    <url>/2023/07/19/react-download-pdf/</url>
    <content><![CDATA[<h2 id="场景描述"><a href="#场景描述" class="headerlink" title="场景描述"></a>场景描述</h2><p>前端实现点击按钮后，把某个div内的所有内容导出为word文档（<code>.docx</code>格式）。  </p>
<ul>
<li>将页面导出为文档时，需要设置页边距、行距、首行缩进等段落格式，以及字体大小等等（类似于在word中写文本也需要设置的一些信息）。</li>
<li>div内含有Echart生成的图表，我们在导出时，为了防止文档中的图表大小溢出，需要调节图片canvas&#x2F;img的大小，重新规定它们的<code>width</code>、<code>height</code>。</li>
</ul>
<h2 id="解决思路"><a href="#解决思路" class="headerlink" title="解决思路"></a>解决思路</h2><ol>
<li>要下载的div设置id为<code>report</code>（自定义设置），获取这个dom元素<code>document.getElementById(&quot;report&quot;)</code>。</li>
<li>将这段React代码转为html代码：<br>（1）canvas echart图表转为图片；<br>（2）做分页，<code>style=&quot;page-break-after: always&quot;</code>。<br>（3）替换一些语法兼容html，比如把 <code>&lt;br&gt;</code>转为<code>&lt;br&gt;&lt;br/&gt;</code>。<br>（4）设置页边距，在html中是设置body的<code>printmarginleft</code>、<code>printmarginright</code>、<code>printmargintop</code>、<code>printmarginbottom</code>属性。</li>
<li>获取React代码的style样式代码，可以直接替换为html的格式，也可以重新设置样式以便适应word文档。设置段落格式、字体格式等。</li>
<li>把上述html代码和style代码合并成一个完整的HTML文档。</li>
<li>使用准备好的HTML创建Blob对象，调用FileSaver.saveAs把这个Blob导出为<code>.docx</code>文档。</li>
</ol>
<h2 id="代码实践"><a href="#代码实践" class="headerlink" title="代码实践"></a>代码实践</h2><span id="more"></span>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">React</span>, &#123; useRef, useState, useEffect &#125; <span class="keyword">from</span> <span class="string">&quot;react&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">Button</span>, message &#125; <span class="keyword">from</span> <span class="string">&quot;antd&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; saveAs &#125; <span class="keyword">from</span> <span class="string">&quot;file-saver&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;./style.scss&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">DownloadReportComp</span> = (<span class="params">props</span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> componentRef = <span class="title function_">useRef</span>();</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> <span class="title function_">downloadReport</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">    <span class="comment">// 这个dom元素是要导出的pdf的div容器</span></span><br><span class="line">    <span class="keyword">const</span> element = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;report&quot;</span>); </span><br><span class="line"></span><br><span class="line">    <span class="comment">// 把当前 vue 所展示的页面对应的 html 转换成一个字符串，这里用到了上面的三个函数，所以，如果是写在外面的话要引用进来</span></span><br><span class="line">    <span class="keyword">let</span> html = <span class="title function_">getReportHtml</span>(<span class="title function_">getHtml</span>(element), <span class="title function_">getStyle</span>());</span><br><span class="line">    <span class="keyword">const</span> f_name = <span class="string">&quot;打印word报告&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 使用我们刚刚准备好的html模板并创建Blob对象</span></span><br><span class="line">    <span class="keyword">let</span> blob = <span class="keyword">new</span> <span class="title class_">Blob</span>([html], &#123;</span><br><span class="line">      <span class="attr">type</span>: <span class="string">&quot;application/vnd.openxmlformats-officedocument.wordprocessingml.document;charset=utf-8&quot;</span>,</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="comment">// 调用FileSaver.saveAs导出下载word</span></span><br><span class="line">    <span class="title function_">saveAs</span>(blob, f_name + <span class="string">&quot;.docx&quot;</span>);</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> <span class="title function_">getReportHtml</span> = (<span class="params">mhtml, style</span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">`</span></span><br><span class="line"><span class="string">				Content-Type: text/html; charset=&quot;utf-8&quot;</span></span><br><span class="line"><span class="string">					&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="string">					&lt;html&gt;</span></span><br><span class="line"><span class="string">					&lt;head&gt;</span></span><br><span class="line"><span class="string">					&lt;style&gt;</span></span><br><span class="line"><span class="string">						<span class="subst">$&#123;style&#125;</span></span></span><br><span class="line"><span class="string">					&lt;/style&gt;</span></span><br><span class="line"><span class="string">					&lt;/head&gt;</span></span><br><span class="line"><span class="string">					&lt;body&gt;</span></span><br><span class="line"><span class="string">						<span class="subst">$&#123;mhtml&#125;</span></span></span><br><span class="line"><span class="string">					&lt;/body&gt;</span></span><br><span class="line"><span class="string">					&lt;/html&gt;</span></span><br><span class="line"><span class="string">				`</span>;</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> <span class="title function_">getHtml</span> = (<span class="params">dom</span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">let</span> _dom = dom || <span class="variable language_">document</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">let</span> canvass = _dom.<span class="title function_">querySelectorAll</span>(<span class="string">&quot;canvas&quot;</span>);</span><br><span class="line">    <span class="comment">// let imgRepalce = _dom.querySelectorAll(&quot;.imgRepalce&quot;);</span></span><br><span class="line">    <span class="keyword">let</span> imageList = [];</span><br><span class="line"></span><br><span class="line">    <span class="comment">// console.log(&quot;canvass&quot;, [...canvass], &quot;imgRepalce&quot;, imgRepalce);</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//canvas echart图表转为图片</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> k4 = <span class="number">0</span>; k4 &lt; canvass.<span class="property">length</span>; k4++) &#123;</span><br><span class="line">      <span class="keyword">let</span> imageURL = canvass[k4].<span class="title function_">toDataURL</span>(<span class="string">&quot;image/png&quot;</span>);</span><br><span class="line">      <span class="keyword">let</span> img = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&quot;img&quot;</span>);</span><br><span class="line">      img.<span class="property">src</span> = imageURL;</span><br><span class="line">      img.<span class="property">width</span> = <span class="number">460</span>;</span><br><span class="line">      imageList.<span class="title function_">push</span>(img.<span class="property">outerHTML</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// console.log(&quot;imageList&quot;, [...imageList]);</span></span><br><span class="line">    <span class="comment">//做分页</span></span><br><span class="line">    <span class="comment">//style=&quot;page-break-after: always&quot;</span></span><br><span class="line">    <span class="keyword">let</span> pages = _dom.<span class="title function_">querySelectorAll</span>(<span class="string">&quot;.result&quot;</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> k5 = <span class="number">0</span>; k5 &lt; pages.<span class="property">length</span>; k5++) &#123;</span><br><span class="line">      pages[k5].<span class="title function_">setAttribute</span>(<span class="string">&quot;style&quot;</span>, <span class="string">&quot;page-break-after: always&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">let</span> result = _dom.<span class="property">outerHTML</span>;</span><br><span class="line">    <span class="comment">//result = result.replace(/&lt;colgroup&gt;(.*?)&lt;\/colgroup&gt;/gi, &#x27;&#x27;)</span></span><br><span class="line">    <span class="comment">//result = result.replace(/&lt;canvas (.*?)&gt;&lt;\/canvas&gt;/gi, &#x27;&#x27;)</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// for (let i = 0; i &lt; canvass.length; i++) &#123;</span></span><br><span class="line">    <span class="comment">//   result = result.replace(</span></span><br><span class="line">    <span class="comment">//     canvass[i].outerHTML,</span></span><br><span class="line">    <span class="comment">//     &#x27;&lt;div class=&quot;img-replace&quot;&gt;&#x27; + imageList[i] + &quot;&lt;/div&gt;&quot;</span></span><br><span class="line">    <span class="comment">//   );</span></span><br><span class="line">    <span class="comment">// &#125;</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; canvass.<span class="property">length</span>; i++) &#123;</span><br><span class="line">      result = result.<span class="title function_">replace</span>(canvass[i].<span class="property">outerHTML</span>, imageList[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    result = result.<span class="title function_">replace</span>(<span class="regexp">/&lt;img (.*?)&gt;/gi</span>, <span class="string">&quot;&lt;img $1&gt;&lt;/img&gt;&quot;</span>);</span><br><span class="line">    result = result.<span class="title function_">replace</span>(<span class="regexp">/&lt;br&gt;/gi</span>, <span class="string">&quot;&lt;br&gt;&lt;/br&gt;&quot;</span>);</span><br><span class="line">    result = result.<span class="title function_">replace</span>(<span class="regexp">/&lt;hr&gt;/gi</span>, <span class="string">&quot;&lt;hr&gt;&lt;/hr&gt;&quot;</span>);</span><br><span class="line">    <span class="comment">// console.log(&quot;result&quot;, result);</span></span><br><span class="line">    <span class="keyword">return</span> (</span><br><span class="line">      <span class="string">&quot;&lt;body printmarginleft=&#x27;48&#x27; printmarginright=&#x27;48&#x27; printmargintop=&#x27;32&#x27; printmarginbottom=&#x27;32&#x27;&gt;&quot;</span> +</span><br><span class="line">      result +</span><br><span class="line">      <span class="string">&quot;&lt;/body&gt;&quot;</span></span><br><span class="line">    );</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> <span class="title function_">getStyle</span> = (<span class="params">notPrint</span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">let</span> str = <span class="string">&#x27;&lt;head&gt;&lt;meta charset=&quot;utf-8&quot;&gt;&lt;/meta&gt;&#x27;</span>;</span><br><span class="line">    <span class="comment">// let str = &#x27;&lt;head&gt;&lt;meta charset=&quot;utf-8&quot;&gt;&lt;/meta&gt;&#x27;,</span></span><br><span class="line">    <span class="comment">// let styles = document.querySelectorAll(&quot;style&quot;);</span></span><br><span class="line">    <span class="comment">// for (let i = 0; i &lt; styles.length; i++) &#123;</span></span><br><span class="line">    <span class="comment">//   str += styles[i].outerHTML;</span></span><br><span class="line">    <span class="comment">// &#125;</span></span><br><span class="line">    str +=</span><br><span class="line">      <span class="string">&quot;&lt;style&gt;.report-passage&#123;line-height: 2em;text-indent: 2em; margin: 0.5em 0;&#125;&lt;/style&gt;&quot;</span>;</span><br><span class="line"></span><br><span class="line">    str +=</span><br><span class="line">      <span class="string">&quot;&lt;style&gt;&quot;</span> +</span><br><span class="line">      (notPrint ? notPrint : <span class="string">&quot;.no-print&quot;</span>) +</span><br><span class="line">      <span class="string">&quot;&#123;display:none;&#125;&lt;/style&gt;&quot;</span>;</span><br><span class="line"></span><br><span class="line">    str +=</span><br><span class="line">      <span class="string">&quot;&lt;style&gt;.report-container p&#123;margin: 0.5em 0;text-indent: 0;&#125;&lt;/style&gt;&quot;</span>;</span><br><span class="line"></span><br><span class="line">    str += <span class="string">&quot;&lt;style&gt;h5&#123;font-color: #2fb89e;&#125;&lt;/style&gt;&quot;</span>;</span><br><span class="line">    str += <span class="string">&quot;&lt;/head&gt;&quot;</span>;</span><br><span class="line">    <span class="comment">// console.log(&quot;style&quot;, str);</span></span><br><span class="line">    <span class="keyword">return</span> str;</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  <span class="title function_">useEffect</span>(<span class="function">() =&gt;</span> &#123;&#125;, []);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Button</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">onClick</span>=<span class="string">&#123;()</span> =&gt;</span> downloadReport()&#125;</span></span><br><span class="line"><span class="language-xml">        style=&#123;&#123; position: &quot;absolute&quot;, zIndex: 5, right: 50 &#125;&#125;</span></span><br><span class="line"><span class="language-xml">      &gt;</span></span><br><span class="line"><span class="language-xml">        下载</span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">Button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">div</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">id</span>=<span class="string">&quot;report&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">ref</span>=<span class="string">&#123;componentRef&#125;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">style</span>=<span class="string">&#123;&#123;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">fontSize:</span> &quot;<span class="attr">1rem</span>&quot;,</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        &#125;&#125;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">className</span>=<span class="string">&quot;report-container&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      &gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;report-passage&quot;</span> <span class="attr">className</span>=<span class="string">&quot;report-passage&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">div</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            <span class="attr">style</span>=<span class="string">&#123;&#123;</span> <span class="attr">textAlign:</span> &quot;<span class="attr">center</span>&quot;, <span class="attr">fontSize:</span> &quot;<span class="attr">1.2rem</span>&quot;, <span class="attr">fontWeight:</span> <span class="attr">700</span> &#125;&#125;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          &gt;</span></span></span><br><span class="line"><span class="language-xml">            能力评价报告</span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">div</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            <span class="attr">style</span>=<span class="string">&#123;&#123;</span> <span class="attr">textAlign:</span> &quot;<span class="attr">center</span>&quot;, <span class="attr">fontSize:</span> &quot;<span class="attr">1.2rem</span>&quot;, <span class="attr">fontWeight:</span> <span class="attr">700</span> &#125;&#125;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          &gt;</span></span></span><br><span class="line"><span class="language-xml">            杨浦区</span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">p</span>&gt;</span>一、基本情况<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">div</span>&gt;</span>名称：四平路街道。<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">div</span>&gt;</span>常住人口：120000 人。<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">p</span>&gt;</span>二、风景评估结果<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">div</span>&gt;</span>最终得分为12。<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">p</span>&gt;</span>三、建筑评估情况<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">div</span>&gt;</span>评估结果为15。<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">          &#123;/* 下方是一个自定义组件，里面是Echart生成的一些图表 */&#125;</span></span><br><span class="line"><span class="language-xml">          &#123;/* <span class="tag">&lt;<span class="name">PassageChart</span> /&gt;</span> */&#125;</span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">  );</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title class_">DownloadReportComp</span>;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>前端</category>
        <category>React</category>
      </categories>
      <tags>
        <tag>javascript</tag>
        <tag>React</tag>
      </tags>
  </entry>
  <entry>
    <title>基于SSL/TSL证书实现HTTPS双向认证2-实践方案</title>
    <url>/2023/07/20/ssl-2/</url>
    <content><![CDATA[<p>本文介绍了以下内容：</p>
<ol>
<li>HTTPS双向认证的过程。</li>
<li>笔者所要解决的问题场景以及进行的前期准备(申请客户端证书)。</li>
<li>前端携带证书发请求的几种方案，以及方案的代码样例和优缺点等。</li>
</ol>
<span id="more"></span>
<h2 id="双向认证介绍"><a href="#双向认证介绍" class="headerlink" title="双向认证介绍"></a>双向认证介绍</h2><p>上篇文章已经介绍了HTTPS单向认证的原理和过程，详见<a href="https://hengqu4.github.io/2023/07/20/ssl-1">基于SSL&#x2F;TSL证书实现HTTPS双向认证1-原理介绍</a>。<br>HTTPS中的<strong>单向认证</strong>即为<strong>服务端认证</strong>，而客户端认证是可选的。<br>单向认证的过程中，客户端从服务器端下载服务器端公钥证书进行验证，然后建立安全通信通道。 </p>
<p>HTTPS在TLS标准中是提供了双向认证的能力的，双向认证是指客户端和服务器端都需要验证对方的身份，在建立Https连接的过程中，握手的流程比单向认证多了几步。<br>双向认证的过程中，客户端除了需要从服务器端下载服务器的公钥证书进行验证外，还需要把客户端的公钥证书上传到服务器端给服务器端进行验证，等双方都认证通过了，才开始建立安全通信通道进行数据传输。 </p>
<h2 id="问题场景描述"><a href="#问题场景描述" class="headerlink" title="问题场景描述"></a>问题场景描述</h2><p>目前要在移动端新增功能，该功能的后端接口原本是只能内网访问，由于新功能只能在外网环境下使用，现需要将该API接口暴露在公网环境下，为了安全性考虑，需要给移动端增加客户端认证，由此笔者对双向认证展开调，并提出了几个实践方案以及其优缺点。  </p>
<h2 id="申请客户端证书"><a href="#申请客户端证书" class="headerlink" title="申请客户端证书"></a>申请客户端证书</h2><p>需要准备<strong>客户端证书</strong>，包括：</p>
<ul>
<li>cert.pem：公钥证书，</li>
<li>private_key.pem：私钥证书，</li>
<li>trust_cert_chain_server.pem：根证书。</li>
</ul>
<p>客户端的工作需要以下步骤：  </p>
<ol>
<li>生成客户端证书和私钥，可以使用openssl命令或者其他工具生成，注意证书需要符合服务器端的要求。</li>
<li>把客户端证书上传到服务器端，服务器端需要把客户端证书添加到信任列表中。</li>
<li>在前端代码中添加证书验证的逻辑，通过浏览器的API实现，比如在请求服务器端API时，需要把客户端证书和私钥一起发送到服务器端，然后根据服务器端返回的证书进行验证。</li>
<li>如果证书验证通过，建立安全通信通道进行数据传输。</li>
</ol>
<p>需要注意的是，在前端代码中添加证书验证的逻辑时，需要注意证书的安全性和有效期，以及证书的更新和维护等问题。  </p>
<h2 id="前端携带证书发请求"><a href="#前端携带证书发请求" class="headerlink" title="前端携带证书发请求"></a>前端携带证书发请求</h2><h3 id="证书放到请求头"><a href="#证书放到请求头" class="headerlink" title="证书放到请求头"></a>证书放到请求头</h3><p>在发请求的时候，前端需要使用XMLHttpRequest或Fetch API来发送请求。<br>其中，XMLHttpRequest可以使用setRequestHeader方法来设置请求头，Fetch API可以使用headers属性来设置请求头。<br>在设置请求头的时候，需要添加Authorization字段，并把证书和私钥通过Base64编码后放在该字段中。同时，还需要添加Content-Type字段，并指定为application&#x2F;json，表示请求体的格式为JSON。</p>
<ol>
<li>前端发送请求：<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 生成证书和私钥，并Base64编码</span></span><br><span class="line"><span class="keyword">const</span> cert = <span class="string">&#x27;xxxxxx&#x27;</span>; <span class="comment">// 客户端证书</span></span><br><span class="line"><span class="keyword">const</span> key = <span class="string">&#x27;xxxxxx&#x27;</span>; <span class="comment">// 客户端私钥</span></span><br><span class="line"><span class="keyword">const</span> authorization = <span class="string">`Basic <span class="subst">$&#123;btoa(<span class="string">`<span class="subst">$&#123;cert&#125;</span>:<span class="subst">$&#123;key&#125;</span>`</span>)&#125;</span>`</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 发送请求</span></span><br><span class="line"><span class="keyword">const</span> url = <span class="string">&#x27;https://example.com/api&#x27;</span>;</span><br><span class="line"><span class="keyword">const</span> data = &#123; <span class="attr">name</span>: <span class="string">&#x27;John Doe&#x27;</span> &#125;;</span><br><span class="line"><span class="title function_">fetch</span>(url, &#123;</span><br><span class="line">  <span class="attr">method</span>: <span class="string">&#x27;POST&#x27;</span>,</span><br><span class="line">  <span class="attr">headers</span>: &#123;</span><br><span class="line">    <span class="string">&#x27;Content-Type&#x27;</span>: <span class="string">&#x27;application/json&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;Authorization&#x27;</span>: authorization</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">body</span>: <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(data)</span><br><span class="line">&#125;)</span><br><span class="line">.<span class="title function_">then</span>(<span class="function"><span class="params">response</span> =&gt;</span> response.<span class="title function_">json</span>())</span><br><span class="line">.<span class="title function_">then</span>(<span class="function"><span class="params">data</span> =&gt;</span> <span class="variable language_">console</span>.<span class="title function_">log</span>(data))</span><br><span class="line">.<span class="title function_">catch</span>(<span class="function"><span class="params">error</span> =&gt;</span> <span class="variable language_">console</span>.<span class="title function_">error</span>(error));</span><br></pre></td></tr></table></figure></li>
<li>服务端需要在接收到请求时，从请求头中获取证书和私钥，并进行验证。可以使用Node.js中的tls模块来实现证书验证。<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> https = <span class="built_in">require</span>(<span class="string">&#x27;https&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> fs = <span class="built_in">require</span>(<span class="string">&#x27;fs&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">&#x27;path&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> server = https.<span class="title function_">createServer</span>(&#123;</span><br><span class="line">  <span class="attr">key</span>: fs.<span class="title function_">readFileSync</span>(path.<span class="title function_">join</span>(__dirname, <span class="string">&#x27;server-key.pem&#x27;</span>)),</span><br><span class="line">  <span class="attr">cert</span>: fs.<span class="title function_">readFileSync</span>(path.<span class="title function_">join</span>(__dirname, <span class="string">&#x27;server-cert.pem&#x27;</span>)),</span><br><span class="line">  <span class="attr">requestCert</span>: <span class="literal">true</span>,</span><br><span class="line">  <span class="attr">rejectUnauthorized</span>: <span class="literal">true</span></span><br><span class="line">&#125;, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> cert = req.<span class="property">socket</span>.<span class="title function_">getPeerCertificate</span>();</span><br><span class="line">  <span class="keyword">const</span> authorized = req.<span class="property">socket</span>.<span class="property">authorized</span>;</span><br><span class="line">  <span class="keyword">const</span> error = req.<span class="property">socket</span>.<span class="property">authorizationError</span>;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">if</span> (authorized) &#123;</span><br><span class="line">    <span class="comment">// 验证证书的有效性</span></span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">error</span>(error);</span><br><span class="line">    res.<span class="property">statusCode</span> = <span class="number">401</span>;</span><br><span class="line">    res.<span class="title function_">end</span>(<span class="string">&#x27;Unauthorized&#x27;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">server.<span class="title function_">listen</span>(<span class="number">443</span>);</span><br></pre></td></tr></table></figure></li>
</ol>
<p><strong>注意</strong>：在实际使用中，需要根据服务器端的要求来设置Authorization字段的格式和内容。同时，还需要对证书和私钥进行保护，避免泄露和被恶意利用。 </p>
<p><strong>缺点</strong>：按照这种做法，证书会暴露在静态代码中，这种行为会泄露我们的证书和私钥，在前端静态代码中直接暴露证书和私钥是非常不安全的，容易被攻击者窃取。  </p>
<h3 id="浏览器客户端证书存储机制"><a href="#浏览器客户端证书存储机制" class="headerlink" title="浏览器客户端证书存储机制"></a>浏览器客户端证书存储机制</h3><p>我们可以考虑使用浏览器提供的客户端证书存储机制。这种机制可以让浏览器管理我们的证书和私钥，并在需要的时候自动调用。  </p>
<ol>
<li><p>把客户端证书导入到浏览器的证书存储中。这个过程因浏览器不同而异，一般来说，我们可以在浏览器的设置中找到证书管理工具，然后选择“导入证书”功能，把客户端证书导入到证书存储中。</p>
</li>
<li><p>在前端代码中添加证书验证的逻辑，通过浏览器的API实现。我们可以使用XMLHttpRequest或Fetch API来发送请求，并在请求中添加证书的标识。浏览器会自动调用证书存储中的证书和私钥，进行双向认证。<br>您说的很对，在前端静态代码中直接暴露证书和私钥是非常不安全的，容易被攻击者窃取。为了避免这种情况，我们可以考虑使用浏览器提供的客户端证书存储机制。这种机制可以让浏览器管理我们的证书和私钥，并在需要的时候自动调用。下面是具体的步骤：</p>
</li>
<li><p>生成客户端证书和私钥，可以使用openssl命令或其他工具生成，注意证书需要符合服务器端的要求。</p>
</li>
<li><p>把客户端证书上传到服务器端，并在服务器端添加到信任列表中。</p>
</li>
<li><p>把客户端证书导入到浏览器的证书存储中。这个过程因浏览器不同而异，一般来说，我们可以在浏览器的设置中找到证书管理工具，然后选择“导入证书”功能，把客户端证书导入到证书存储中。</p>
</li>
<li><p>在前端代码中添加证书验证的逻辑，通过浏览器的API实现。我们可以使用XMLHttpRequest或Fetch API来发送请求，并在请求中添加证书的标识。浏览器会自动调用证书存储中的证书和私钥，进行双向认证。</p>
</li>
</ol>
<p>以下是示例代码：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 发送请求</span></span><br><span class="line"><span class="keyword">const</span> url = <span class="string">&#x27;https://example.com/api&#x27;</span>;</span><br><span class="line"><span class="keyword">const</span> data = &#123; <span class="attr">name</span>: <span class="string">&#x27;John Doe&#x27;</span> &#125;;</span><br><span class="line"><span class="title function_">fetch</span>(url, &#123;</span><br><span class="line">  <span class="attr">method</span>: <span class="string">&#x27;POST&#x27;</span>,</span><br><span class="line">  <span class="attr">headers</span>: &#123;</span><br><span class="line">    <span class="string">&#x27;Content-Type&#x27;</span>: <span class="string">&#x27;application/json&#x27;</span>,</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">body</span>: <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(data),</span><br><span class="line">  <span class="attr">agent</span>: <span class="keyword">new</span> https.<span class="title class_">Agent</span>(&#123;</span><br><span class="line">    <span class="attr">cert</span>: certBuffer,</span><br><span class="line">    <span class="attr">key</span>: keyBuffer,</span><br><span class="line">    <span class="attr">passphrase</span>: <span class="string">&#x27;passphrase&#x27;</span></span><br><span class="line">  &#125;)</span><br><span class="line">&#125;)</span><br><span class="line">.<span class="title function_">then</span>(<span class="function"><span class="params">response</span> =&gt;</span> response.<span class="title function_">json</span>())</span><br><span class="line">.<span class="title function_">then</span>(<span class="function"><span class="params">data</span> =&gt;</span> <span class="variable language_">console</span>.<span class="title function_">log</span>(data))</span><br><span class="line">.<span class="title function_">catch</span>(<span class="function"><span class="params">error</span> =&gt;</span> <span class="variable language_">console</span>.<span class="title function_">error</span>(error));</span><br></pre></td></tr></table></figure>
<p><strong>缺点</strong>：这种方法还需要让使用用户手动导入证书，会增加软件使用成本，这会影响用户体验。另外，如果每个用户都需要手动导入证书，那管理起来也会非常麻烦。</p>
<h3 id="前端动态生成证书"><a href="#前端动态生成证书" class="headerlink" title="前端动态生成证书"></a>前端动态生成证书</h3><p>在客户端动态生成证书和私钥，并在发送请求时把证书和私钥一起发送给服务器端。</p>
<ol>
<li><p>在前端代码中使用crypto API动态生成客户端证书和私钥。可以使用以下代码：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> &#123; privateKey, publicKey &#125; = <span class="keyword">await</span> crypto.<span class="property">subtle</span>.<span class="title function_">generateKey</span>(</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&quot;RSASSA-PKCS1-v1_5&quot;</span>,</span><br><span class="line">    <span class="attr">modulusLength</span>: <span class="number">2048</span>,</span><br><span class="line">    <span class="attr">publicExponent</span>: <span class="keyword">new</span> <span class="title class_">Uint8Array</span>([<span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>]),</span><br><span class="line">    <span class="attr">hash</span>: &#123; <span class="attr">name</span>: <span class="string">&quot;SHA-256&quot;</span> &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="literal">true</span>,</span><br><span class="line">  [<span class="string">&quot;sign&quot;</span>, <span class="string">&quot;verify&quot;</span>]</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> cert = <span class="keyword">await</span> crypto.<span class="property">subtle</span>.<span class="title function_">exportKey</span>(<span class="string">&quot;spki&quot;</span>, publicKey);</span><br><span class="line"><span class="keyword">const</span> key = <span class="keyword">await</span> crypto.<span class="property">subtle</span>.<span class="title function_">exportKey</span>(<span class="string">&quot;pkcs8&quot;</span>, privateKey);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> certPEM = <span class="string">`-----BEGIN CERTIFICATE-----\n<span class="subst">$&#123;btoa(<span class="built_in">String</span>.fromCharCode(...<span class="keyword">new</span> <span class="built_in">Uint8Array</span>(cert)))&#125;</span>\n-----END CERTIFICATE-----`</span>;</span><br><span class="line"><span class="keyword">const</span> keyPEM = <span class="string">`-----BEGIN PRIVATE KEY-----\n<span class="subst">$&#123;btoa(<span class="built_in">String</span>.fromCharCode(...<span class="keyword">new</span> <span class="built_in">Uint8Array</span>(key)))&#125;</span>\n-----END PRIVATE KEY-----`</span>;</span><br></pre></td></tr></table></figure>
</li>
<li><p>在发送请求时把证书和私钥一起发送到服务器端。可以使用XMLHttpRequest或Fetch API来发送请求，并把证书和私钥放在请求头中。以下是示例代码：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 发送请求</span></span><br><span class="line"><span class="keyword">const</span> url = <span class="string">&#x27;https://example.com/api&#x27;</span>;</span><br><span class="line"><span class="keyword">const</span> data = &#123; <span class="attr">name</span>: <span class="string">&#x27;John Doe&#x27;</span> &#125;;</span><br><span class="line"><span class="title function_">fetch</span>(url, &#123;</span><br><span class="line">  <span class="attr">method</span>: <span class="string">&#x27;POST&#x27;</span>,</span><br><span class="line">  <span class="attr">headers</span>: &#123;</span><br><span class="line">    <span class="string">&#x27;Content-Type&#x27;</span>: <span class="string">&#x27;application/json&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;X-Client-Cert&#x27;</span>: certPEM,</span><br><span class="line">    <span class="string">&#x27;X-Client-Key&#x27;</span>: keyPEM</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">body</span>: <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(data)</span><br><span class="line">&#125;)</span><br><span class="line">.<span class="title function_">then</span>(<span class="function"><span class="params">response</span> =&gt;</span> response.<span class="title function_">json</span>())</span><br><span class="line">.<span class="title function_">then</span>(<span class="function"><span class="params">data</span> =&gt;</span> <span class="variable language_">console</span>.<span class="title function_">log</span>(data))</span><br><span class="line">.<span class="title function_">catch</span>(<span class="function"><span class="params">error</span> =&gt;</span> <span class="variable language_">console</span>.<span class="title function_">error</span>(error));</span><br></pre></td></tr></table></figure>
</li>
<li><p>在服务器端进行证书的验证。服务器端需要把客户端证书添加到信任列表中，并在接收请求时验证证书的有效性。可以使用Node.js中的tls模块来实现证书验证。以下是示例代码：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> https = <span class="built_in">require</span>(<span class="string">&#x27;https&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> fs = <span class="built_in">require</span>(<span class="string">&#x27;fs&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> options = &#123;</span><br><span class="line">  <span class="attr">key</span>: fs.<span class="title function_">readFileSync</span>(<span class="string">&#x27;server-key.pem&#x27;</span>),</span><br><span class="line">  <span class="attr">cert</span>: fs.<span class="title function_">readFileSync</span>(<span class="string">&#x27;server-cert.pem&#x27;</span>),</span><br><span class="line">  <span class="attr">ca</span>: fs.<span class="title function_">readFileSync</span>(<span class="string">&#x27;client-cert.pem&#x27;</span>),</span><br><span class="line">  <span class="attr">requestCert</span>: <span class="literal">true</span>,</span><br><span class="line">  <span class="attr">rejectUnauthorized</span>: <span class="literal">true</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">https.<span class="title function_">createServer</span>(options, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> certPEM = req.<span class="property">socket</span>.<span class="title function_">getPeerCertificate</span>().<span class="property">raw</span>.<span class="title function_">toString</span>(<span class="string">&#x27;base64&#x27;</span>);</span><br><span class="line">  <span class="comment">// 验证证书的有效性</span></span><br><span class="line">  <span class="comment">// ...</span></span><br><span class="line">&#125;).<span class="title function_">listen</span>(<span class="number">443</span>);</span><br></pre></td></tr></table></figure></li>
</ol>
<p><strong>问题</strong>：后端本来已经根据申请好的客户端证书写好了一套逻辑，如果前端改为用动态生成证书的方式，那么后端需要重新开发。</p>
<h3 id="nginx代理"><a href="#nginx代理" class="headerlink" title="nginx代理"></a>nginx代理</h3><p>可以通过nginx来实现这个功能，在nginx中开启双向认证。<br>在nginx配置文件中添加以下内容，用于指定客户端证书和私钥的路径和密码：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">ssl_client_certificate /path/to/client/cert.pem;</span><br><span class="line">ssl_client_key /path/to/client/key.pem;</span><br><span class="line">ssl_password_file /path/to/client/password.txt;</span><br></pre></td></tr></table></figure>
<p>其中，<code>/path/to/client/cert.pem</code>和<code>/path/to/client/key.pem</code>分别为客户端证书和私钥的路径，<code>/path/to/client/password.txt</code>为密钥库密码的文件路径。  </p>
<p>在nginx配置文件中添加以下内容，用于启用双向认证：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">ssl_verify_client on;</span><br><span class="line">ssl_verify_depth 2;</span><br></pre></td></tr></table></figure>
<p>其中，<code>ssl_verify_client on</code>表示启用双向认证，<code>ssl_verify_depth 2</code>表示验证证书链的深度。<br>重启nginx服务，使配置生效。  </p>
<p>当客户端发起请求时，nginx会要求客户端提供证书，如果客户端没有提供证书或者证书验证失败，则请求将被拒绝。同时，由于证书和私钥的路径和密码并没有写在代码中，因此也提高了证书和私钥的安全性。</p>
<p><strong>问题</strong>：小程序是打包到 微信平台&#x2F;飞书平台 发布的，开发人员没有办法在平台服务器中配置nginx的相关文件。</p>
<h3 id="nginx-再找个域名做中转"><a href="#nginx-再找个域名做中转" class="headerlink" title="nginx+再找个域名做中转"></a>nginx+再找个域名做中转</h3><p>业务接口后端为test.com，中转域名为auth.com。  </p>
<ul>
<li>auth.com和test.com实现nginx的双向认证。  </li>
<li>先从小程序代理到auth.com，这里部分接口做权限验证。通过后才可以调用业务接口。</li>
</ul>
<p>小程序代理的样例代码:</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">wx.<span class="title function_">request</span>(&#123;</span><br><span class="line">  <span class="attr">url</span>: <span class="string">&#x27;http://your-proxy-server.com/your-api-endpoint&#x27;</span>,</span><br><span class="line">  <span class="attr">header</span>: &#123;</span><br><span class="line">    <span class="string">&#x27;Proxy-Host&#x27;</span>: <span class="string">&#x27;your-backend-server.com&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;Proxy-Port&#x27;</span>: <span class="string">&#x27;your-backend-port&#x27;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="title function_">success</span>(<span class="params">res</span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(res.<span class="property">data</span>)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>计算机网络</category>
        <category>SSL</category>
      </categories>
      <tags>
        <tag>计算机网络</tag>
        <tag>SSL</tag>
        <tag>HTTPS</tag>
        <tag>双向认证</tag>
      </tags>
  </entry>
  <entry>
    <title>基于SSL/TSL证书实现HTTPS双向认证1-原理介绍</title>
    <url>/2023/07/20/ssl-1/</url>
    <content><![CDATA[<h2 id="SSL和TSL的关系"><a href="#SSL和TSL的关系" class="headerlink" title="SSL和TSL的关系"></a>SSL和TSL的关系</h2><p>由于HTTPS的推出受到了很多人的欢迎，在SSL更新到3.0时，IETF对SSL3.0进行了标准化，并添加了少数机制(但是几乎和SSL3.0无差异)，标准化后的IETF更名为TLS1.0(Transport Layer Security 安全传输层协议)，可以说<strong>TLS就是SSL的新版本3.1</strong>，并同时发布“RFC2246-TLS加密协议详解”。  </p>
<ul>
<li><p>SSL（Secure Socket Layer，安全套接字层）：1994年为 Netscape 所研发，SSL 协议位于 TCP&#x2F;IP 协议与各种应用层协议之间，为数据通讯提供安全支持。</p>
</li>
<li><p>TLS（Transport Layer Security，传输层安全）：其前身是 SSL，它最初的几个版本（SSL 1.0、SSL 2.0、SSL 3.0）由网景公司开发，1999年从 3.1 开始被 IETF 标准化并改名，发展至今已经有 TLS 1.0、TLS 1.1、TLS 1.2 三个版本。SSL3.0和TLS1.0由于存在安全漏洞，已经很少被使用到。TLS 1.3 改动会比较大，目前还在草案阶段，目前使用最广泛的是TLS 1.1、TLS 1.2。  </p>
</li>
<li><p>HTTPS：HTTP + TLS （在HTTP上套了TLS） </p>
<blockquote>
<p>HTTPS（全称：HyperText Transfer Protocol over Secure Socket Layer）</p>
</blockquote>
</li>
</ul>
<h2 id="服务端申请证书"><a href="#服务端申请证书" class="headerlink" title="服务端申请证书"></a>服务端申请证书</h2><blockquote>
<p>HTTPS认证需要服务端首先申请一份证书，这里介绍一下如何申请证书。  </p>
</blockquote>
<h3 id="名词解释"><a href="#名词解释" class="headerlink" title="名词解释"></a>名词解释</h3><ul>
<li><strong>CA机构</strong>：国家所认可的具有权威、公平公正的第三方机构，其作用是验证数字证书拥有者是否合法，并以此签发证书。</li>
<li><strong>CA数字证书</strong>：由CA机构发行的数字证书，其中包括两把密钥：一把公钥和一把私钥。服务端可以利用相关的工具来生成CA数字证书，以此加密自己的文件或是保护自己的网址。</li>
</ul>
<h3 id="证书文件格式"><a href="#证书文件格式" class="headerlink" title="证书文件格式"></a>证书文件格式</h3><p>证书相关文件有多种格式，常见格式：<code>.crt</code>，<code>.key</code>，<code>.req</code>，<code>.csr</code>，<code>.pem</code>，<code>.der</code>。</p>
<p><code>xx.crt</code>：证书文件<br><code>xx.key</code>：私钥文件<br><code>xx.req</code>：请求文件<br><code>xx.csr</code>：请求文件<br><code>xx.pem</code>：证书文件为 pem 格式（文本文件）<br><code>xx.der</code>：证书文件为 der 格式（二进制文件）</p>
<p>实际上，上述文件的扩展名可以随意命名。只是为了容易理解文件的功能而选择大家都认识的命名方式。但是，上述文件是有格式的，只能是 <code>.pem</code> 格式或者 <code>.der</code> 格式。使用什么格式的文件取决于需求。</p>
<h3 id="服务端申请证书过程"><a href="#服务端申请证书过程" class="headerlink" title="服务端申请证书过程"></a>服务端申请证书过程</h3><ol>
<li>服务端server生成<code>.crt</code>证书文件，其中包括<code>公钥</code>、<code>申请者信息</code>、<code>域名</code>。</li>
<li>server把证书文件发给CA机构：<br>（1） CA机构根据crt文件生成一段Hash摘要，<br>（2） 用CA私钥加密，生成签名。</li>
<li>CA机构把证书发给server，其中包括<code>.crt</code>文件、 <code>签名</code>。</li>
</ol>
<h2 id="HTTPS认证过程"><a href="#HTTPS认证过程" class="headerlink" title="HTTPS认证过程"></a>HTTPS认证过程</h2><blockquote>
<p>主角：客户端client、服务端server。  </p>
</blockquote>
<ol>
<li><p>客户端client <strong>–〉</strong> 服务端server：<br>client发起访问，携带<code>cipher suit(密码套件，包括自己可用的加密方案)</code>、<code>随机数1</code>（用于后续对称密钥）。</p>
</li>
<li><p>客户端client <strong>〈–</strong> 服务端server:<br>server发送 <code>确认好双方的加密方案</code>、<code>随机数2</code>。</p>
</li>
<li><p>客户端client <strong>〈–</strong> 服务端server：<br>（1）server发送<code>数字证书</code>，<br>（2）client验证证书：拿CA机构的公钥去验证该证书，若成功，则<strong>获得server公钥</strong>，生成<code>随机数3</code>，用<strong>服务端公钥加密随机数3</strong>作为<code>pre-key</code>。</p>
<blockquote>
<p><strong>数字证书用处</strong>：<br>若黑客中途篡改，则签名验证不会通过；<br>若黑客修改证书信息后再重新计算签名？不可能，因为黑客拿不到CA机构的私钥。</p>
</blockquote>
</li>
<li><p>客户端client <strong>–〉</strong> 服务端server:<br>（1）client发送<code>pre-key</code>；<br>（2）server用<strong>服务端私钥解密pre-key</strong>，得出<code>随机数3</code>。</p>
</li>
<li><p>客户端client &lt;–&gt; 服务端server:<br>双方用<code>随机数1、2、3</code>生成<strong>对称密钥</strong><code>master-key</code>，之后用master-key传输数据。</p>
</li>
</ol>
]]></content>
      <categories>
        <category>计算机网络</category>
        <category>SSL</category>
      </categories>
      <tags>
        <tag>计算机网络</tag>
        <tag>SSL</tag>
        <tag>HTTPS</tag>
        <tag>TSL</tag>
        <tag>数字证书</tag>
      </tags>
  </entry>
  <entry>
    <title>Vue中封装并使用WebSocket</title>
    <url>/2023/07/19/vue3-wss/</url>
    <content><![CDATA[]]></content>
      <categories>
        <category>前端</category>
        <category>Vue</category>
      </categories>
      <tags>
        <tag>Vue</tag>
        <tag>Vue3</tag>
        <tag>WebSocket</tag>
        <tag>wss</tag>
      </tags>
  </entry>
</search>
